{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 29485afe39424ac29f27","webpack:///./src/base-error.js","webpack:///./src/scheduler.js","webpack:///./vendor/TraceKit/tracekit.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/4xx.js","webpack:///./src/5xx.js","webpack:///./src/error-factory.js","webpack:///./src/js-error.js","webpack:///./src/logger.js"],"names":["Base","stackInfo","name","mode","message","frames","options","key","hasOwnProperty","frame","push","factory","Scheduler","loggingUrl","url","maxChunkSize","errors","window","navigator","undefined","setHost","setBrowser","ua","userAgent","tem","M","match","test","exec","slice","join","replace","appName","appVersion","splice","browser","host","location","instance","length","send","obj","data","http","XMLHttpRequest","open","setRequestHeader","JSON","stringify","getInstance","entropy","TraceKit","_oldTraceKit","_slice","UNKNOWN_FUNCTION","_has","object","Object","prototype","call","_isUndefined","what","noConflict","wrap","traceKitWrapper","func","wrapped","apply","arguments","e","report","reportModuleWrapper","handlers","lastException","lastExceptionStack","subscribe","handler","installGlobalHandler","unsubscribe","i","notifyHandlers","stack","isWindowError","error","exception","collectWindowErrors","inner","_oldOnerrorHandler","_onErrorHandlerInstalled","traceKitWindowOnError","lineNo","columnNo","errorObj","computeStackTrace","augmentStackTraceWithInitialElement","processLastException","guessFunctionName","line","context","gatherContext","onerror","_lastExceptionStack","_lastException","ex","setTimeout","incomplete","computeStackTraceWrapper","debug","sourceCache","loadSource","remoteFetching","getXHR","ActiveXObject","request","responseText","getSource","source","domain","document","split","reFunctionArgNames","reGuessFunction","maxLines","m","linesBefore","Math","floor","linesOfContext","linesAfter","start","max","end","min","escapeRegExp","text","escapeCodeAsRegExpForMatchingInsideHTML","body","findSourceInUrls","re","urls","j","substring","index","lastIndexOf","findSourceInLine","fragment","RegExp","findSourceByFunctionBody","href","scripts","getElementsByTagName","code","codeRE","eventRE","parts","result","script","src","args","event","computeStackTraceFromStackProp","chrome","gecko","winjs","lines","element","reference","isNative","indexOf","column","columnNumber","computeStackTraceFromStacktraceProp","stacktrace","opera10Regex","opera11Regex","exc","computeStackTraceFromOperaMultiLineMessage","lineRE1","lineRE2","lineRE3","inlineScriptBlocks","s","item","relativeLine","pos","innerText","midline","initial","unshift","partial","computeStackTraceByWalkingCallerChain","depth","functionName","funcs","recursion","curr","caller","toString","input","description","sourceURL","fileName","lineNumber","computeStackTraceOfCaller","Error","ofCaller","extendToAsynchronousCallbacks","_helper","fnName","originalFn","traceKitAsyncExtension","originalCallback","module","exports","FourXX","type","setFrames","FiveXX","Factory","JSError","filename","lineno","colno","_normalizeFrame","fill","replacement","track","orig","isFunction","events","_triggers","on","callback","triggerHandler","params","Logger","global","scheduler","_handleOnErrorStackInfo","subscribeAjaxRequest","self","_handleAjaxErrors","xhrproto","origOpen","method","__logger_xhr","status_code","origSend","xhr","onreadystatechange","status","abc","origFetch","fn","t","Array","fetchData","then","response","ex1"],"mappings":"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","file":"logger.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Logger\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Logger\"] = factory();\n\telse\n\t\troot[\"Logger\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 29485afe39424ac29f27","\"use strict\";\r\n\r\nexport default class Base {\r\n    constructor(stackInfo)  {\r\n        this.name = stackInfo.name || '';\r\n        this.mode = stackInfo.mode || '';\r\n        this.message = stackInfo.message || '';\r\n        this.frames = [];\r\n    }\r\n    options(options) {\r\n        for (var key in options) {\r\n            if (options.hasOwnProperty(key)) this[key] = options[key];\r\n        }\r\n        return this;\r\n    }\r\n    setFrames(frame) {\r\n        this.frames.push(frame);\r\n        return this;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/base-error.js","\"use strict\";\r\n\r\nimport Factory from './error-factory';\r\nlet factory = new Factory();\r\n\r\nexport default class Scheduler{\r\n\r\n    constructor(options) {\r\n        this.loggingUrl = options.url;\r\n        this.maxChunkSize = options.maxChunkSize || 5;\r\n        this.errors = [];\r\n        this.window = options.window;\r\n        this.navigator = typeof navigator !== 'undefined' ? navigator : undefined;\r\n        this.setHost();\r\n        this.setBrowser();\r\n    }\r\n\r\n    setBrowser() {\r\n        var ua= navigator.userAgent, tem,\r\n            M= ua.match(/(opera|chrome|safari|firefox|msie|trident(?=\\/))\\/?\\s*(\\d+)/i) || [];\r\n        if(/trident/i.test(M[1])){\r\n            tem=  /\\brv[ :]+(\\d+)/g.exec(ua) || [];\r\n            return 'IE '+(tem[1] || '');\r\n        }\r\n        if(M[1]=== 'Chrome'){\r\n            tem= ua.match(/\\b(OPR|Edge)\\/(\\d+)/);\r\n            if(tem!= null) return tem.slice(1).join(' ').replace('OPR', 'Opera');\r\n        }\r\n        M= M[2]? [M[1], M[2]]: [navigator.appName, navigator.appVersion, '-?'];\r\n        if((tem= ua.match(/version\\/(\\d+)/i))!= null) M.splice(1, 1, tem[1]);\r\n        this.browser =  M.join(' ');\r\n    }\r\n\r\n    setHost() {\r\n        if (this.window) {\r\n            this.host = this.window.location.host;\r\n        }\r\n    }\r\n\r\n    entropy(instance) {\r\n        this.errors.push(instance);\r\n        if(this.errors.length === this.maxChunkSize) {\r\n            this.send(this.errors.splice(0, this.maxChunkSize));\r\n        }\r\n    }\r\n    send(errors) {\r\n        let obj = {\r\n                data : errors\r\n            },\r\n            http = new XMLHttpRequest(),\r\n            url = this.loggingUrl;\r\n\r\n        http.open(\"POST\", url, true);\r\n\r\n        //Send the proper header information along with the request\r\n        http.setRequestHeader(\"Content-type\", \"application/json\");\r\n\r\n        http.send(JSON.stringify(obj));\r\n    }\r\n    error(stackInfo, options) {\r\n        let instance = factory.getInstance(stackInfo, options);\r\n        instance.host = this.host;\r\n        instance.browser = this.browser;\r\n        this.entropy(instance)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scheduler.js","/**\r\n * https://github.com/csnover/TraceKit\r\n * @license MIT\r\n * @namespace TraceKit\r\n */\r\n\r\nvar TraceKit = {};\r\nvar _oldTraceKit = window.TraceKit;\r\n\r\n// global reference to slice\r\nvar _slice = [].slice;\r\nvar UNKNOWN_FUNCTION = '?';\r\n\r\n/**\r\n * A better form of hasOwnProperty<br/>\r\n * Example: `_has(MainHostObject, property) === true/false`\r\n *\r\n * @param {Object} object to check property\r\n * @param {string} key to check\r\n * @return {Boolean} true if the object has the key and it is not inherited\r\n */\r\nfunction _has(object, key) {\r\n    return Object.prototype.hasOwnProperty.call(object, key);\r\n}\r\n\r\n/**\r\n * Returns true if the parameter is undefined<br/>\r\n * Example: `_isUndefined(val) === true/false`\r\n *\r\n * @param {*} what Value to check\r\n * @return {Boolean} true if undefined and false otherwise\r\n */\r\nfunction _isUndefined(what) {\r\n    return typeof what === 'undefined';\r\n}\r\n\r\n/**\r\n * Export TraceKit out to another variable<br/>\r\n * Example: `var TK = TraceKit.noConflict()`\r\n * @return {Object} The TraceKit object\r\n * @memberof TraceKit\r\n */\r\nTraceKit.noConflict = function noConflict() {\r\n    window.TraceKit = _oldTraceKit;\r\n    return TraceKit;\r\n};\r\n\r\n/**\r\n * Wrap any function in a TraceKit reporter<br/>\r\n * Example: `func = TraceKit.wrap(func);`\r\n *\r\n * @param {Function} func Function to be wrapped\r\n * @return {Function} The wrapped func\r\n * @memberof TraceKit\r\n */\r\nTraceKit.wrap = function traceKitWrapper(func) {\r\n    function wrapped() {\r\n        try {\r\n            return func.apply(this, arguments);\r\n        } catch (e) {\r\n            TraceKit.report(e);\r\n            throw e;\r\n        }\r\n    }\r\n    return wrapped;\r\n};\r\n\r\n/**\r\n * Cross-browser processing of unhandled exceptions\r\n *\r\n * Syntax:\r\n * ```js\r\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\r\n *   TraceKit.report.unsubscribe(function(stackInfo) { ... })\r\n *   TraceKit.report(exception)\r\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\r\n * ```\r\n *\r\n * Supports:\r\n *   - Firefox: full stack trace with line numbers, plus column number\r\n *     on top frame; column number is not guaranteed\r\n *   - Opera: full stack trace with line and column numbers\r\n *   - Chrome: full stack trace with line and column numbers\r\n *   - Safari: line and column number for the top frame only; some frames\r\n *     may be missing, and column number is not guaranteed\r\n *   - IE: line and column number for the top frame only; some frames\r\n *     may be missing, and column number is not guaranteed\r\n *\r\n * In theory, TraceKit should work on all of the following versions:\r\n *   - IE5.5+ (only 8.0 tested)\r\n *   - Firefox 0.9+ (only 3.5+ tested)\r\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\r\n *     Exceptions Have Stacktrace to be enabled in opera:config)\r\n *   - Safari 3+ (only 4+ tested)\r\n *   - Chrome 1+ (only 5+ tested)\r\n *   - Konqueror 3.5+ (untested)\r\n *\r\n * Requires TraceKit.computeStackTrace.\r\n *\r\n * Tries to catch all unhandled exceptions and report them to the\r\n * subscribed handlers. Please note that TraceKit.report will rethrow the\r\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\r\n * If the exception does not reach the top of the browser, you will only\r\n * get a stack trace from the point where TraceKit.report was called.\r\n *\r\n * Handlers receive a TraceKit.StackTrace object as described in the\r\n * TraceKit.computeStackTrace docs.\r\n *\r\n * @memberof TraceKit\r\n * @namespace\r\n */\r\nTraceKit.report = (function reportModuleWrapper() {\r\n    var handlers = [],\r\n        lastException = null,\r\n        lastExceptionStack = null;\r\n\r\n    /**\r\n     * Add a crash handler.\r\n     * @param {Function} handler\r\n     * @memberof TraceKit.report\r\n     */\r\n    function subscribe(handler) {\r\n        installGlobalHandler();\r\n        handlers.push(handler);\r\n    }\r\n\r\n    /**\r\n     * Remove a crash handler.\r\n     * @param {Function} handler\r\n     * @memberof TraceKit.report\r\n     */\r\n    function unsubscribe(handler) {\r\n        for (var i = handlers.length - 1; i >= 0; --i) {\r\n            if (handlers[i] === handler) {\r\n                handlers.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Dispatch stack information to all handlers.\r\n     * @param {TraceKit.StackTrace} stack\r\n     * @param {boolean} isWindowError Is this a top-level window error?\r\n     * @param {Error=} error The error that's being handled (if available, null otherwise)\r\n     * @memberof TraceKit.report\r\n     * @throws An exception if an error occurs while calling an handler.\r\n     */\r\n    function notifyHandlers(stack, isWindowError, error) {\r\n        var exception = null;\r\n        if (isWindowError && !TraceKit.collectWindowErrors) {\r\n            return;\r\n        }\r\n        for (var i in handlers) {\r\n            if (_has(handlers, i)) {\r\n                try {\r\n                    handlers[i](stack, isWindowError, error);\r\n                } catch (inner) {\r\n                    exception = inner;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (exception) {\r\n            throw exception;\r\n        }\r\n    }\r\n\r\n    var _oldOnerrorHandler, _onErrorHandlerInstalled;\r\n\r\n    /**\r\n     * Ensures all global unhandled exceptions are recorded.\r\n     * Supported by Gecko and IE.\r\n     * @param {string} message Error message.\r\n     * @param {string} url URL of script that generated the exception.\r\n     * @param {(number|string)} lineNo The line number at which the error occurred.\r\n     * @param {(number|string)=} columnNo The column number at which the error occurred.\r\n     * @param {Error=} errorObj The actual Error object.\r\n     * @memberof TraceKit.report\r\n     */\r\n    function traceKitWindowOnError(message, url, lineNo, columnNo, errorObj) {\r\n        var stack = null;\r\n\r\n        if (lastExceptionStack) {\r\n            TraceKit.computeStackTrace.augmentStackTraceWithInitialElement(lastExceptionStack, url, lineNo, message);\r\n            processLastException();\r\n        } else if (errorObj) {\r\n            stack = TraceKit.computeStackTrace(errorObj);\r\n            notifyHandlers(stack, true, errorObj);\r\n        } else {\r\n            var location = {\r\n                'url': url,\r\n                'line': lineNo,\r\n                'column': columnNo\r\n            };\r\n            location.func = TraceKit.computeStackTrace.guessFunctionName(location.url, location.line);\r\n            location.context = TraceKit.computeStackTrace.gatherContext(location.url, location.line);\r\n            stack = {\r\n                'mode': 'onerror',\r\n                'message': message,\r\n                'stack': [location]\r\n            };\r\n\r\n            notifyHandlers(stack, true, null);\r\n        }\r\n\r\n        if (_oldOnerrorHandler) {\r\n            return _oldOnerrorHandler.apply(this, arguments);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Install a global onerror handler\r\n     * @memberof TraceKit.report\r\n     */\r\n    function installGlobalHandler () {\r\n        if (_onErrorHandlerInstalled === true) {\r\n            return;\r\n        }\r\n        _oldOnerrorHandler = window.onerror;\r\n        window.onerror = traceKitWindowOnError;\r\n        _onErrorHandlerInstalled = true;\r\n    }\r\n\r\n    /**\r\n     * Process the most recent exception\r\n     * @memberof TraceKit.report\r\n     */\r\n    function processLastException() {\r\n        var _lastExceptionStack = lastExceptionStack,\r\n            _lastException = lastException;\r\n        lastExceptionStack = null;\r\n        lastException = null;\r\n        notifyHandlers(_lastExceptionStack, false, _lastException);\r\n    }\r\n\r\n    /**\r\n     * Reports an unhandled Error to TraceKit.\r\n     * @param {Error} ex\r\n     * @memberof TraceKit.report\r\n     * @throws An exception if an incomplete stack trace is detected (old IE browsers).\r\n     */\r\n    function report(ex) {\r\n        if (lastExceptionStack) {\r\n            if (lastException === ex) {\r\n                return; // already caught by an inner catch block, ignore\r\n            } else {\r\n                processLastException();\r\n            }\r\n        }\r\n\r\n        var stack = TraceKit.computeStackTrace(ex);\r\n        lastExceptionStack = stack;\r\n        lastException = ex;\r\n\r\n        // If the stack trace is incomplete, wait for 2 seconds for\r\n        // slow slow IE to see if onerror occurs or not before reporting\r\n        // this exception; otherwise, we will end up with an incomplete\r\n        // stack trace\r\n        window.setTimeout(function () {\r\n            if (lastException === ex) {\r\n                processLastException();\r\n            }\r\n        }, (stack.incomplete ? 2000 : 0));\r\n\r\n        throw ex; // re-throw to propagate to the top level (and cause window.onerror)\r\n    }\r\n\r\n    report.subscribe = subscribe;\r\n    report.unsubscribe = unsubscribe;\r\n    return report;\r\n}());\r\n\r\n/**\r\n * An object representing a single stack frame.\r\n * @typedef {Object} StackFrame\r\n * @property {string} url The JavaScript or HTML file URL.\r\n * @property {string} func The function name, or empty for anonymous functions (if guessing did not work).\r\n * @property {string[]?} args The arguments passed to the function, if known.\r\n * @property {number=} line The line number, if known.\r\n * @property {number=} column The column number, if known.\r\n * @property {string[]} context An array of source code lines; the middle element corresponds to the correct line#.\r\n * @memberof TraceKit\r\n */\r\n\r\n/**\r\n * An object representing a JavaScript stack trace.\r\n * @typedef {Object} StackTrace\r\n * @property {string} name The name of the thrown exception.\r\n * @property {string} message The exception error message.\r\n * @property {TraceKit.StackFrame[]} stack An array of stack frames.\r\n * @property {string} mode 'stack', 'stacktrace', 'multiline', 'callers', 'onerror', or 'failed' -- method used to collect the stack trace.\r\n * @memberof TraceKit\r\n */\r\n\r\n/**\r\n * TraceKit.computeStackTrace: cross-browser stack traces in JavaScript\r\n *\r\n * Syntax:\r\n *   ```js\r\n *   s = TraceKit.computeStackTrace.ofCaller([depth])\r\n *   s = TraceKit.computeStackTrace(exception) // consider using TraceKit.report instead (see below)\r\n *   ```\r\n *\r\n * Supports:\r\n *   - Firefox:  full stack trace with line numbers and unreliable column\r\n *               number on top frame\r\n *   - Opera 10: full stack trace with line and column numbers\r\n *   - Opera 9-: full stack trace with line numbers\r\n *   - Chrome:   full stack trace with line and column numbers\r\n *   - Safari:   line and column number for the topmost stacktrace element\r\n *               only\r\n *   - IE:       no line numbers whatsoever\r\n *\r\n * Tries to guess names of anonymous functions by looking for assignments\r\n * in the source code. In IE and Safari, we have to guess source file names\r\n * by searching for function bodies inside all page scripts. This will not\r\n * work for scripts that are loaded cross-domain.\r\n * Here be dragons: some function names may be guessed incorrectly, and\r\n * duplicate functions may be mismatched.\r\n *\r\n * TraceKit.computeStackTrace should only be used for tracing purposes.\r\n * Logging of unhandled exceptions should be done with TraceKit.report,\r\n * which builds on top of TraceKit.computeStackTrace and provides better\r\n * IE support by utilizing the window.onerror event to retrieve information\r\n * about the top of the stack.\r\n *\r\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\r\n * so computeStackTrace instead walks its *own* chain of callers.\r\n * This means that:\r\n *  * in Safari, some methods may be missing from the stack trace;\r\n *  * in IE, the topmost function in the stack trace will always be the\r\n *    caller of computeStackTrace.\r\n *\r\n * This is okay for tracing (because you are likely to be calling\r\n * computeStackTrace from the function you want to be the topmost element\r\n * of the stack trace anyway), but not okay for logging unhandled\r\n * exceptions (because your catch block will likely be far away from the\r\n * inner function that actually caused the exception).\r\n *\r\n * Tracing example:\r\n *  ```js\r\n *     function trace(message) {\r\n*         var stackInfo = TraceKit.computeStackTrace.ofCaller();\r\n*         var data = message + \"\\n\";\r\n*         for(var i in stackInfo.stack) {\r\n*             var item = stackInfo.stack[i];\r\n*             data += (item.func || '[anonymous]') + \"() in \" + item.url + \":\" + (item.line || '0') + \"\\n\";\r\n*         }\r\n*         if (window.console)\r\n*             console.info(data);\r\n*         else\r\n*             alert(data);\r\n*     }\r\n * ```\r\n * @memberof TraceKit\r\n * @namespace\r\n */\r\nTraceKit.computeStackTrace = (function computeStackTraceWrapper() {\r\n    var debug = false,\r\n        sourceCache = {};\r\n\r\n    /**\r\n     * Attempts to retrieve source code via XMLHttpRequest, which is used\r\n     * to look up anonymous function names.\r\n     * @param {string} url URL of source code.\r\n     * @return {string} Source contents.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function loadSource(url) {\r\n        if (!TraceKit.remoteFetching) { //Only attempt request if remoteFetching is on.\r\n            return '';\r\n        }\r\n        try {\r\n            var getXHR = function() {\r\n                try {\r\n                    return new window.XMLHttpRequest();\r\n                } catch (e) {\r\n                    // explicitly bubble up the exception if not found\r\n                    return new window.ActiveXObject('Microsoft.XMLHTTP');\r\n                }\r\n            };\r\n\r\n            var request = getXHR();\r\n            request.open('GET', url, false);\r\n            request.send('');\r\n            return request.responseText;\r\n        } catch (e) {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieves source code from the source code cache.\r\n     * @param {string} url URL of source code.\r\n     * @return {Array.<string>} Source contents.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function getSource(url) {\r\n        if (typeof url !== 'string') {\r\n            return [];\r\n        }\r\n\r\n        if (!_has(sourceCache, url)) {\r\n            // URL needs to be able to fetched within the acceptable domain.  Otherwise,\r\n            // cross-domain errors will be triggered.\r\n            /*\r\n             Regex matches:\r\n             0 - Full Url\r\n             1 - Protocol\r\n             2 - Domain\r\n             3 - Port (Useful for internal applications)\r\n             4 - Path\r\n             */\r\n            var source = '';\r\n            var domain = '';\r\n            try { domain = window.document.domain; } catch (e) { }\r\n            var match = /(.*)\\:\\/\\/([^:\\/]+)([:\\d]*)\\/{0,1}([\\s\\S]*)/.exec(url);\r\n            if (match && match[2] === domain) {\r\n                source = loadSource(url);\r\n            }\r\n            sourceCache[url] = source ? source.split('\\n') : [];\r\n        }\r\n\r\n        return sourceCache[url];\r\n    }\r\n\r\n    /**\r\n     * Tries to use an externally loaded copy of source code to determine\r\n     * the name of a function by looking at the name of the variable it was\r\n     * assigned to, if any.\r\n     * @param {string} url URL of source code.\r\n     * @param {(string|number)} lineNo Line number in source code.\r\n     * @return {string} The function name, if discoverable.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function guessFunctionName(url, lineNo) {\r\n        var reFunctionArgNames = /function ([^(]*)\\(([^)]*)\\)/,\r\n            reGuessFunction = /['\"]?([0-9A-Za-z$_]+)['\"]?\\s*[:=]\\s*(function|eval|new Function)/,\r\n            line = '',\r\n            maxLines = 10,\r\n            source = getSource(url),\r\n            m;\r\n\r\n        if (!source.length) {\r\n            return UNKNOWN_FUNCTION;\r\n        }\r\n\r\n        // Walk backwards from the first line in the function until we find the line which\r\n        // matches the pattern above, which is the function definition\r\n        for (var i = 0; i < maxLines; ++i) {\r\n            line = source[lineNo - i] + line;\r\n\r\n            if (!_isUndefined(line)) {\r\n                if ((m = reGuessFunction.exec(line))) {\r\n                    return m[1];\r\n                } else if ((m = reFunctionArgNames.exec(line))) {\r\n                    return m[1];\r\n                }\r\n            }\r\n        }\r\n\r\n        return UNKNOWN_FUNCTION;\r\n    }\r\n\r\n    /**\r\n     * Retrieves the surrounding lines from where an exception occurred.\r\n     * @param {string} url URL of source code.\r\n     * @param {(string|number)} line Line number in source code to centre\r\n     * around for context.\r\n     * @return {?Array.<string>} Lines of source code.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function gatherContext(url, line) {\r\n        var source = getSource(url);\r\n\r\n        if (!source.length) {\r\n            return null;\r\n        }\r\n\r\n        var context = [],\r\n        // linesBefore & linesAfter are inclusive with the offending line.\r\n        // if linesOfContext is even, there will be one extra line\r\n        //   *before* the offending line.\r\n            linesBefore = Math.floor(TraceKit.linesOfContext / 2),\r\n        // Add one extra line if linesOfContext is odd\r\n            linesAfter = linesBefore + (TraceKit.linesOfContext % 2),\r\n            start = Math.max(0, line - linesBefore - 1),\r\n            end = Math.min(source.length, line + linesAfter - 1);\r\n\r\n        line -= 1; // convert to 0-based index\r\n\r\n        for (var i = start; i < end; ++i) {\r\n            if (!_isUndefined(source[i])) {\r\n                context.push(source[i]);\r\n            }\r\n        }\r\n\r\n        return context.length > 0 ? context : null;\r\n    }\r\n\r\n    /**\r\n     * Escapes special characters, except for whitespace, in a string to be\r\n     * used inside a regular expression as a string literal.\r\n     * @param {string} text The string.\r\n     * @return {string} The escaped string literal.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function escapeRegExp(text) {\r\n        return text.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#]/g, '\\\\$&');\r\n    }\r\n\r\n    /**\r\n     * Escapes special characters in a string to be used inside a regular\r\n     * expression as a string literal. Also ensures that HTML entities will\r\n     * be matched the same as their literal friends.\r\n     * @param {string} body The string.\r\n     * @return {string} The escaped string.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function escapeCodeAsRegExpForMatchingInsideHTML(body) {\r\n        return escapeRegExp(body).replace('<', '(?:<|&lt;)').replace('>', '(?:>|&gt;)').replace('&', '(?:&|&amp;)').replace('\"', '(?:\"|&quot;)').replace(/\\s+/g, '\\\\s+');\r\n    }\r\n\r\n    /**\r\n     * Determines where a code fragment occurs in the source code.\r\n     * @param {RegExp} re The function definition.\r\n     * @param {Array.<string>} urls A list of URLs to search.\r\n     * @return {?Object.<string, (string|number)>} An object containing\r\n     * the url, line, and column number of the defined function.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function findSourceInUrls(re, urls) {\r\n        var source, m;\r\n        for (var i = 0, j = urls.length; i < j; ++i) {\r\n            // console.log('searching', urls[i]);\r\n            if ((source = getSource(urls[i])).length) {\r\n                source = source.join('\\n');\r\n                if ((m = re.exec(source))) {\r\n                    // console.log('Found function in ' + urls[i]);\r\n\r\n                    return {\r\n                        'url': urls[i],\r\n                        'line': source.substring(0, m.index).split('\\n').length,\r\n                        'column': m.index - source.lastIndexOf('\\n', m.index) - 1\r\n                    };\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log('no match');\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Determines at which column a code fragment occurs on a line of the\r\n     * source code.\r\n     * @param {string} fragment The code fragment.\r\n     * @param {string} url The URL to search.\r\n     * @param {(string|number)} line The line number to examine.\r\n     * @return {?number} The column number.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function findSourceInLine(fragment, url, line) {\r\n        var source = getSource(url),\r\n            re = new RegExp('\\\\b' + escapeRegExp(fragment) + '\\\\b'),\r\n            m;\r\n\r\n        line -= 1;\r\n\r\n        if (source && source.length > line && (m = re.exec(source[line]))) {\r\n            return m.index;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Determines where a function was defined within the source code.\r\n     * @param {(Function|string)} func A function reference or serialized\r\n     * function definition.\r\n     * @return {?Object.<string, (string|number)>} An object containing\r\n     * the url, line, and column number of the defined function.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function findSourceByFunctionBody(func) {\r\n        if (_isUndefined(window && window.document)) {\r\n            return;\r\n        }\r\n\r\n        var urls = [window.location.href],\r\n            scripts = window.document.getElementsByTagName('script'),\r\n            body,\r\n            code = '' + func,\r\n            codeRE = /^function(?:\\s+([\\w$]+))?\\s*\\(([\\w\\s,]*)\\)\\s*\\{\\s*(\\S[\\s\\S]*\\S)\\s*\\}\\s*$/,\r\n            eventRE = /^function on([\\w$]+)\\s*\\(event\\)\\s*\\{\\s*(\\S[\\s\\S]*\\S)\\s*\\}\\s*$/,\r\n            re,\r\n            parts,\r\n            result;\r\n\r\n        for (var i = 0; i < scripts.length; ++i) {\r\n            var script = scripts[i];\r\n            if (script.src) {\r\n                urls.push(script.src);\r\n            }\r\n        }\r\n\r\n        if (!(parts = codeRE.exec(code))) {\r\n            re = new RegExp(escapeRegExp(code).replace(/\\s+/g, '\\\\s+'));\r\n        }\r\n\r\n        // not sure if this is really necessary, but I don’t have a test\r\n        // corpus large enough to confirm that and it was in the original.\r\n        else {\r\n            var name = parts[1] ? '\\\\s+' + parts[1] : '',\r\n                args = parts[2].split(',').join('\\\\s*,\\\\s*');\r\n\r\n            body = escapeRegExp(parts[3]).replace(/;$/, ';?'); // semicolon is inserted if the function ends with a comment.replace(/\\s+/g, '\\\\s+');\r\n            re = new RegExp('function' + name + '\\\\s*\\\\(\\\\s*' + args + '\\\\s*\\\\)\\\\s*{\\\\s*' + body + '\\\\s*}');\r\n        }\r\n\r\n        // look for a normal function definition\r\n        if ((result = findSourceInUrls(re, urls))) {\r\n            return result;\r\n        }\r\n\r\n        // look for an old-school event handler function\r\n        if ((parts = eventRE.exec(code))) {\r\n            var event = parts[1];\r\n            body = escapeCodeAsRegExpForMatchingInsideHTML(parts[2]);\r\n\r\n            // look for a function defined in HTML as an onXXX handler\r\n            re = new RegExp('on' + event + '=[\\\\\\'\"]\\\\s*' + body + '\\\\s*[\\\\\\'\"]', 'i');\r\n\r\n            if ((result = findSourceInUrls(re, urls[0]))) {\r\n                return result;\r\n            }\r\n\r\n            // look for ???\r\n            re = new RegExp(body);\r\n\r\n            if ((result = findSourceInUrls(re, urls))) {\r\n                return result;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    // Contents of Exception in various browsers.\r\n    //\r\n    // SAFARI:\r\n    // ex.message = Can't find variable: qq\r\n    // ex.line = 59\r\n    // ex.sourceId = 580238192\r\n    // ex.sourceURL = http://...\r\n    // ex.expressionBeginOffset = 96\r\n    // ex.expressionCaretOffset = 98\r\n    // ex.expressionEndOffset = 98\r\n    // ex.name = ReferenceError\r\n    //\r\n    // FIREFOX:\r\n    // ex.message = qq is not defined\r\n    // ex.fileName = http://...\r\n    // ex.lineNumber = 59\r\n    // ex.columnNumber = 69\r\n    // ex.stack = ...stack trace... (see the example below)\r\n    // ex.name = ReferenceError\r\n    //\r\n    // CHROME:\r\n    // ex.message = qq is not defined\r\n    // ex.name = ReferenceError\r\n    // ex.type = not_defined\r\n    // ex.arguments = ['aa']\r\n    // ex.stack = ...stack trace...\r\n    //\r\n    // INTERNET EXPLORER:\r\n    // ex.message = ...\r\n    // ex.name = ReferenceError\r\n    //\r\n    // OPERA:\r\n    // ex.message = ...message... (see the example below)\r\n    // ex.name = ReferenceError\r\n    // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\r\n    // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\r\n\r\n    /**\r\n     * Computes stack trace information from the stack property.\r\n     * Chrome and Gecko use this property.\r\n     * @param {Error} ex\r\n     * @return {?TraceKit.StackTrace} Stack trace information.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function computeStackTraceFromStackProp(ex) {\r\n        if (!ex.stack) {\r\n            return null;\r\n        }\r\n\r\n        var chrome = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|webpack|eval).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i,\r\n            gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|\\[native).*?)(?::(\\d+))?(?::(\\d+))?\\s*$/i,\r\n            winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\r\n            lines = ex.stack.split('\\n'),\r\n            stack = [],\r\n            parts,\r\n            element,\r\n            reference = /^(.*) is undefined$/.exec(ex.message);\r\n\r\n        for (var i = 0, j = lines.length; i < j; ++i) {\r\n            if ((parts = chrome.exec(lines[i]))) {\r\n                var isNative = parts[2] && parts[2].indexOf('native') !== -1;\r\n                element = {\r\n                    'url': !isNative ? parts[2] : null,\r\n                    'func': parts[1] || UNKNOWN_FUNCTION,\r\n                    'args': isNative ? [parts[2]] : [],\r\n                    'line': parts[3] ? +parts[3] : null,\r\n                    'column': parts[4] ? +parts[4] : null\r\n                };\r\n            } else if ( parts = winjs.exec(lines[i]) ) {\r\n                element = {\r\n                    'url': parts[2],\r\n                    'func': parts[1] || UNKNOWN_FUNCTION,\r\n                    'args': [],\r\n                    'line': +parts[3],\r\n                    'column': parts[4] ? +parts[4] : null\r\n                };\r\n            } else if ((parts = gecko.exec(lines[i]))) {\r\n                element = {\r\n                    'url': parts[3],\r\n                    'func': parts[1] || UNKNOWN_FUNCTION,\r\n                    'args': parts[2] ? parts[2].split(',') : [],\r\n                    'line': parts[4] ? +parts[4] : null,\r\n                    'column': parts[5] ? +parts[5] : null\r\n                };\r\n            } else {\r\n                continue;\r\n            }\r\n\r\n            if (!element.func && element.line) {\r\n                element.func = guessFunctionName(element.url, element.line);\r\n            }\r\n\r\n            if (element.line) {\r\n                element.context = gatherContext(element.url, element.line);\r\n            }\r\n\r\n            stack.push(element);\r\n        }\r\n\r\n        if (!stack.length) {\r\n            return null;\r\n        }\r\n\r\n        if (stack[0] && stack[0].line && !stack[0].column && reference) {\r\n            stack[0].column = findSourceInLine(reference[1], stack[0].url, stack[0].line);\r\n        } else if (!stack[0].column && !_isUndefined(ex.columnNumber)) {\r\n            // FireFox uses this awesome columnNumber property for its top frame\r\n            // Also note, Firefox's column number is 0-based and everything else expects 1-based,\r\n            // so adding 1\r\n            stack[0].column = ex.columnNumber + 1;\r\n        }\r\n\r\n        return {\r\n            'mode': 'stack',\r\n            'name': ex.name,\r\n            'message': ex.message,\r\n            'stack': stack\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Computes stack trace information from the stacktrace property.\r\n     * Opera 10+ uses this property.\r\n     * @param {Error} ex\r\n     * @return {?TraceKit.StackTrace} Stack trace information.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function computeStackTraceFromStacktraceProp(ex) {\r\n        // Access and store the stacktrace property before doing ANYTHING\r\n        // else to it because Opera is not very good at providing it\r\n        // reliably in other circumstances.\r\n        var stacktrace = ex.stacktrace;\r\n        if (!stacktrace) {\r\n            return;\r\n        }\r\n\r\n        var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i,\r\n            opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\))? in (.*):\\s*$/i,\r\n            lines = stacktrace.split('\\n'),\r\n            stack = [],\r\n            parts;\r\n\r\n        for (var line = 0; line < lines.length; line += 2) {\r\n            var element = null;\r\n            if ((parts = opera10Regex.exec(lines[line]))) {\r\n                element = {\r\n                    'url': parts[2],\r\n                    'line': +parts[1],\r\n                    'column': null,\r\n                    'func': parts[3],\r\n                    'args':[]\r\n                };\r\n            } else if ((parts = opera11Regex.exec(lines[line]))) {\r\n                element = {\r\n                    'url': parts[6],\r\n                    'line': +parts[1],\r\n                    'column': +parts[2],\r\n                    'func': parts[3] || parts[4],\r\n                    'args': parts[5] ? parts[5].split(',') : []\r\n                };\r\n            }\r\n\r\n            if (element) {\r\n                if (!element.func && element.line) {\r\n                    element.func = guessFunctionName(element.url, element.line);\r\n                }\r\n                if (element.line) {\r\n                    try {\r\n                        element.context = gatherContext(element.url, element.line);\r\n                    } catch (exc) {}\r\n                }\r\n\r\n                if (!element.context) {\r\n                    element.context = [lines[line + 1]];\r\n                }\r\n\r\n                stack.push(element);\r\n            }\r\n        }\r\n\r\n        if (!stack.length) {\r\n            return null;\r\n        }\r\n\r\n        return {\r\n            'mode': 'stacktrace',\r\n            'name': ex.name,\r\n            'message': ex.message,\r\n            'stack': stack\r\n        };\r\n    }\r\n\r\n    /**\r\n     * NOT TESTED.\r\n     * Computes stack trace information from an error message that includes\r\n     * the stack trace.\r\n     * Opera 9 and earlier use this method if the option to show stack\r\n     * traces is turned on in opera:config.\r\n     * @param {Error} ex\r\n     * @return {?TraceKit.StackTrace} Stack information.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function computeStackTraceFromOperaMultiLineMessage(ex) {\r\n        // TODO: Clean this function up\r\n        // Opera includes a stack trace into the exception message. An example is:\r\n        //\r\n        // Statement on line 3: Undefined variable: undefinedFunc\r\n        // Backtrace:\r\n        //   Line 3 of linked script file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.js: In function zzz\r\n        //         undefinedFunc(a);\r\n        //   Line 7 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function yyy\r\n        //           zzz(x, y, z);\r\n        //   Line 3 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function xxx\r\n        //           yyy(a, a, a);\r\n        //   Line 1 of function script\r\n        //     try { xxx('hi'); return false; } catch(ex) { TraceKit.report(ex); }\r\n        //   ...\r\n\r\n        var lines = ex.message.split('\\n');\r\n        if (lines.length < 4) {\r\n            return null;\r\n        }\r\n\r\n        var lineRE1 = /^\\s*Line (\\d+) of linked script ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i,\r\n            lineRE2 = /^\\s*Line (\\d+) of inline#(\\d+) script in ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i,\r\n            lineRE3 = /^\\s*Line (\\d+) of function script\\s*$/i,\r\n            stack = [],\r\n            scripts = (window && window.document && window.document.getElementsByTagName('script')),\r\n            inlineScriptBlocks = [],\r\n            parts;\r\n\r\n        for (var s in scripts) {\r\n            if (_has(scripts, s) && !scripts[s].src) {\r\n                inlineScriptBlocks.push(scripts[s]);\r\n            }\r\n        }\r\n\r\n        for (var line = 2; line < lines.length; line += 2) {\r\n            var item = null;\r\n            if ((parts = lineRE1.exec(lines[line]))) {\r\n                item = {\r\n                    'url': parts[2],\r\n                    'func': parts[3],\r\n                    'args': [],\r\n                    'line': +parts[1],\r\n                    'column': null\r\n                };\r\n            } else if ((parts = lineRE2.exec(lines[line]))) {\r\n                item = {\r\n                    'url': parts[3],\r\n                    'func': parts[4],\r\n                    'args': [],\r\n                    'line': +parts[1],\r\n                    'column': null // TODO: Check to see if inline#1 (+parts[2]) points to the script number or column number.\r\n                };\r\n                var relativeLine = (+parts[1]); // relative to the start of the <SCRIPT> block\r\n                var script = inlineScriptBlocks[parts[2] - 1];\r\n                if (script) {\r\n                    var source = getSource(item.url);\r\n                    if (source) {\r\n                        source = source.join('\\n');\r\n                        var pos = source.indexOf(script.innerText);\r\n                        if (pos >= 0) {\r\n                            item.line = relativeLine + source.substring(0, pos).split('\\n').length;\r\n                        }\r\n                    }\r\n                }\r\n            } else if ((parts = lineRE3.exec(lines[line]))) {\r\n                var url = window.location.href.replace(/#.*$/, '');\r\n                var re = new RegExp(escapeCodeAsRegExpForMatchingInsideHTML(lines[line + 1]));\r\n                var src = findSourceInUrls(re, [url]);\r\n                item = {\r\n                    'url': url,\r\n                    'func': '',\r\n                    'args': [],\r\n                    'line': src ? src.line : parts[1],\r\n                    'column': null\r\n                };\r\n            }\r\n\r\n            if (item) {\r\n                if (!item.func) {\r\n                    item.func = guessFunctionName(item.url, item.line);\r\n                }\r\n                var context = gatherContext(item.url, item.line);\r\n                var midline = (context ? context[Math.floor(context.length / 2)] : null);\r\n                if (context && midline.replace(/^\\s*/, '') === lines[line + 1].replace(/^\\s*/, '')) {\r\n                    item.context = context;\r\n                } else {\r\n                    // if (context) alert(\"Context mismatch. Correct midline:\\n\" + lines[i+1] + \"\\n\\nMidline:\\n\" + midline + \"\\n\\nContext:\\n\" + context.join(\"\\n\") + \"\\n\\nURL:\\n\" + item.url);\r\n                    item.context = [lines[line + 1]];\r\n                }\r\n                stack.push(item);\r\n            }\r\n        }\r\n        if (!stack.length) {\r\n            return null; // could not parse multiline exception message as Opera stack trace\r\n        }\r\n\r\n        return {\r\n            'mode': 'multiline',\r\n            'name': ex.name,\r\n            'message': lines[0],\r\n            'stack': stack\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Adds information about the first frame to incomplete stack traces.\r\n     * Safari and IE require this to get complete data on the first frame.\r\n     * @param {TraceKit.StackTrace} stackInfo Stack trace information from\r\n     * one of the compute* methods.\r\n     * @param {string} url The URL of the script that caused an error.\r\n     * @param {(number|string)} lineNo The line number of the script that\r\n     * caused an error.\r\n     * @param {string=} message The error generated by the browser, which\r\n     * hopefully contains the name of the object that caused the error.\r\n     * @return {boolean} Whether or not the stack information was\r\n     * augmented.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {\r\n        var initial = {\r\n            'url': url,\r\n            'line': lineNo\r\n        };\r\n\r\n        if (initial.url && initial.line) {\r\n            stackInfo.incomplete = false;\r\n\r\n            if (!initial.func) {\r\n                initial.func = guessFunctionName(initial.url, initial.line);\r\n            }\r\n\r\n            if (!initial.context) {\r\n                initial.context = gatherContext(initial.url, initial.line);\r\n            }\r\n\r\n            var reference = / '([^']+)' /.exec(message);\r\n            if (reference) {\r\n                initial.column = findSourceInLine(reference[1], initial.url, initial.line);\r\n            }\r\n\r\n            if (stackInfo.stack.length > 0) {\r\n                if (stackInfo.stack[0].url === initial.url) {\r\n                    if (stackInfo.stack[0].line === initial.line) {\r\n                        return false; // already in stack trace\r\n                    } else if (!stackInfo.stack[0].line && stackInfo.stack[0].func === initial.func) {\r\n                        stackInfo.stack[0].line = initial.line;\r\n                        stackInfo.stack[0].context = initial.context;\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n\r\n            stackInfo.stack.unshift(initial);\r\n            stackInfo.partial = true;\r\n            return true;\r\n        } else {\r\n            stackInfo.incomplete = true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Computes stack trace information by walking the arguments.caller\r\n     * chain at the time the exception occurred. This will cause earlier\r\n     * frames to be missed but is the only way to get any stack trace in\r\n     * Safari and IE. The top frame is restored by\r\n     * {@link augmentStackTraceWithInitialElement}.\r\n     * @param {Error} ex\r\n     * @return {TraceKit.StackTrace=} Stack trace information.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function computeStackTraceByWalkingCallerChain(ex, depth) {\r\n        var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i,\r\n            stack = [],\r\n            funcs = {},\r\n            recursion = false,\r\n            parts,\r\n            item,\r\n            source;\r\n\r\n        for (var curr = computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) {\r\n            if (curr === computeStackTrace || curr === TraceKit.report) {\r\n                // console.log('skipping internal function');\r\n                continue;\r\n            }\r\n\r\n            item = {\r\n                'url': null,\r\n                'func': UNKNOWN_FUNCTION,\r\n                'args': [],\r\n                'line': null,\r\n                'column': null\r\n            };\r\n\r\n            if (curr.name) {\r\n                item.func = curr.name;\r\n            } else if ((parts = functionName.exec(curr.toString()))) {\r\n                item.func = parts[1];\r\n            }\r\n\r\n            if (typeof item.func === 'undefined') {\r\n                try {\r\n                    item.func = parts.input.substring(0, parts.input.indexOf('{'));\r\n                } catch (e) { }\r\n            }\r\n\r\n            if ((source = findSourceByFunctionBody(curr))) {\r\n                item.url = source.url;\r\n                item.line = source.line;\r\n\r\n                if (item.func === UNKNOWN_FUNCTION) {\r\n                    item.func = guessFunctionName(item.url, item.line);\r\n                }\r\n\r\n                var reference = / '([^']+)' /.exec(ex.message || ex.description);\r\n                if (reference) {\r\n                    item.column = findSourceInLine(reference[1], source.url, source.line);\r\n                }\r\n            }\r\n\r\n            if (funcs['' + curr]) {\r\n                recursion = true;\r\n            }else{\r\n                funcs['' + curr] = true;\r\n            }\r\n\r\n            stack.push(item);\r\n        }\r\n\r\n        if (depth) {\r\n            // console.log('depth is ' + depth);\r\n            // console.log('stack is ' + stack.length);\r\n            stack.splice(0, depth);\r\n        }\r\n\r\n        var result = {\r\n            'mode': 'callers',\r\n            'name': ex.name,\r\n            'message': ex.message,\r\n            'stack': stack\r\n        };\r\n        augmentStackTraceWithInitialElement(result, ex.sourceURL || ex.fileName, ex.line || ex.lineNumber, ex.message || ex.description);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Computes a stack trace for an exception.\r\n     * @param {Error} ex\r\n     * @param {(string|number)=} depth\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function computeStackTrace(ex, depth) {\r\n        var stack = null;\r\n        depth = (depth == null ? 0 : +depth);\r\n\r\n        try {\r\n            // This must be tried first because Opera 10 *destroys*\r\n            // its stacktrace property if you try to access the stack\r\n            // property first!!\r\n            stack = computeStackTraceFromStacktraceProp(ex);\r\n            if (stack) {\r\n                return stack;\r\n            }\r\n        } catch (e) {\r\n            if (debug) {\r\n                throw e;\r\n            }\r\n        }\r\n\r\n        try {\r\n            stack = computeStackTraceFromStackProp(ex);\r\n            if (stack) {\r\n                return stack;\r\n            }\r\n        } catch (e) {\r\n            if (debug) {\r\n                throw e;\r\n            }\r\n        }\r\n\r\n        try {\r\n            stack = computeStackTraceFromOperaMultiLineMessage(ex);\r\n            if (stack) {\r\n                return stack;\r\n            }\r\n        } catch (e) {\r\n            if (debug) {\r\n                throw e;\r\n            }\r\n        }\r\n\r\n        try {\r\n            stack = computeStackTraceByWalkingCallerChain(ex, depth + 1);\r\n            if (stack) {\r\n                return stack;\r\n            }\r\n        } catch (e) {\r\n            if (debug) {\r\n                throw e;\r\n            }\r\n        }\r\n\r\n        return {\r\n            'mode': 'failed'\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Logs a stacktrace starting from the previous call and working down.\r\n     * @param {(number|string)=} depth How many frames deep to trace.\r\n     * @return {TraceKit.StackTrace} Stack trace information.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function computeStackTraceOfCaller(depth) {\r\n        depth = (depth == null ? 0 : +depth) + 1; // \"+ 1\" because \"ofCaller\" should drop one frame\r\n        try {\r\n            throw new Error();\r\n        } catch (ex) {\r\n            return computeStackTrace(ex, depth + 1);\r\n        }\r\n    }\r\n\r\n    computeStackTrace.augmentStackTraceWithInitialElement = augmentStackTraceWithInitialElement;\r\n    computeStackTrace.guessFunctionName = guessFunctionName;\r\n    computeStackTrace.gatherContext = gatherContext;\r\n    computeStackTrace.ofCaller = computeStackTraceOfCaller;\r\n    computeStackTrace.getSource = getSource;\r\n\r\n    return computeStackTrace;\r\n}());\r\n\r\n/**\r\n * Extends support for global error handling for asynchronous browser\r\n * functions. Adopted from Closure Library's errorhandler.js\r\n * @memberof TraceKit\r\n */\r\nTraceKit.extendToAsynchronousCallbacks = function () {\r\n    var _helper = function _helper(fnName) {\r\n        var originalFn = window[fnName];\r\n        window[fnName] = function traceKitAsyncExtension() {\r\n            // Make a copy of the arguments\r\n            var args = _slice.call(arguments);\r\n            var originalCallback = args[0];\r\n            if (typeof (originalCallback) === 'function') {\r\n                args[0] = TraceKit.wrap(originalCallback);\r\n            }\r\n            // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\r\n            // also only supports 2 argument and doesn't care what \"this\" is, so we\r\n            // can just call the original function directly.\r\n            if (originalFn.apply) {\r\n                return originalFn.apply(this, args);\r\n            } else {\r\n                return originalFn(args[0], args[1]);\r\n            }\r\n        };\r\n    };\r\n\r\n    _helper('setTimeout');\r\n    _helper('setInterval');\r\n};\r\n\r\n//Default options:\r\nif (!TraceKit.remoteFetching) {\r\n    TraceKit.remoteFetching = true;\r\n}\r\nif (!TraceKit.collectWindowErrors) {\r\n    TraceKit.collectWindowErrors = true;\r\n}\r\nif (!TraceKit.linesOfContext || TraceKit.linesOfContext < 1) {\r\n    // 5 lines before, the offending line, 5 lines after\r\n    TraceKit.linesOfContext = 11;\r\n}\r\n\r\nmodule.exports = TraceKit;\n\n\n// WEBPACK FOOTER //\n// ./vendor/TraceKit/tracekit.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 3\n// module chunks = 0","\"use strict\";\r\nimport Base from './base-error';\r\nexport default class FourXX extends Base{\r\n    constructor(stackInfo, options) {\r\n        super(stackInfo, options);\r\n        this.type = '4XX';\r\n        this.setFrames(stackInfo);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/4xx.js","\"use strict\";\r\nimport Base from './base-error';\r\nexport default class FiveXX extends Base{\r\n    constructor(stackInfo) {\r\n        super(stackInfo);\r\n        this.type = '5XX';\r\n        this.setFrames(stackInfo);\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/5xx.js","\"use strict\";\r\nimport FourXX from './4xx';\r\nimport FiveXX from './5xx';\r\nimport JSError from './js-error';\r\n\r\n\r\nexport default class Factory {\r\n    constructor() {}\r\n    getInstance(stackInfo, options) {\r\n        let instance,\r\n        type = /^([Uu]ncaught exception)|((Eval|Internal|Range|Reference|Syntax|Type|URI|)Error)$/.test(stackInfo.name) ? 'js' : stackInfo.name;\r\n        switch (type) {\r\n            case '4xx' : instance = new FourXX(stackInfo, options);\r\n                         break;\r\n            case '5xx' : instance = new FiveXX(stackInfo, options);\r\n                         break;\r\n            case 'js'  : instance = new JSError(stackInfo, options);\r\n                         break;\r\n            default : break;\r\n        }\r\n        return instance;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/error-factory.js","\"use strict\";\r\nimport Base from './base-error';\r\nexport default class JSError extends Base {\r\n    constructor(stackInfo, options) {\r\n        super(stackInfo);\r\n        this.type = 'JS';\r\n        this.setFrames(stackInfo.stack).options(options);\r\n    }\r\n    _normalizeFrame(frame) {\r\n        if (!frame.url) return;\r\n        return {\r\n            filename:   frame.url,\r\n            lineno:     frame.line,\r\n            colno:      frame.column,\r\n            'function': frame.func || '?'\r\n        };\r\n    }\r\n    setFrames(stack){\r\n        for(let i=0; i < stack.length; i++){\r\n            let frame = this._normalizeFrame(stack[i]);\r\n            if (frame) {\r\n                this.frames.push(frame);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/js-error.js","'use strict';\r\n\r\nimport TraceKit from '../vendor/TraceKit/tracekit';\r\nimport Scheduler from './scheduler'\r\n\r\nlet instance;\r\n\r\nfunction fill(obj, name, replacement, track) {\r\n    var orig = obj[name];\r\n    obj[name] = replacement(orig);\r\n    if (track) {\r\n        track.push([obj, name, orig]);\r\n    }\r\n}\r\n\r\nfunction isFunction(what) {\r\n    return typeof what === 'function';\r\n}\r\n\r\nvar events = new function() {\r\n    var _triggers = {};\r\n\r\n    this.on = function(event,callback) {\r\n        if(!_triggers[event])\r\n            _triggers[event] = [];\r\n        _triggers[event].push( callback );\r\n    }\r\n\r\n    this.triggerHandler = function(event,params) {\r\n        if( _triggers[event] ) {\r\n            for(var i in _triggers[event] )\r\n                _triggers[event][i](params);\r\n        }\r\n    }\r\n};\r\n\r\nexport default class Logger{\r\n    constructor(options){\r\n        if (instance) {\r\n            return instance;\r\n        }\r\n        instance = this;\r\n        // This is to be defensive in environments where window does not exist\r\n        this.window = typeof window !== 'undefined' ? window\r\n            : typeof global !== 'undefined' ? global : undefined;\r\n        options = options || {};\r\n        options.window = this.window;\r\n        this.scheduler = new Scheduler(options, this.window);\r\n    }\r\n\r\n    install(){\r\n        TraceKit.report.subscribe((stackInfo) => {\r\n            this._handleOnErrorStackInfo(stackInfo);\r\n        });\r\n        this.subscribeAjaxRequest();\r\n    }\r\n\r\n    subscribeAjaxRequest() {\r\n        var self = this;\r\n        events.on('error', (error) => {\r\n            this._handleAjaxErrors(error);\r\n        });\r\n        if ('XMLHttpRequest' in this.window) {\r\n            let xhrproto = XMLHttpRequest.prototype;\r\n            fill(xhrproto, 'open', function(origOpen) {\r\n                return function (method, url) { // preserve arity\r\n                        this.__logger_xhr = {\r\n                            method: method,\r\n                            url: url,\r\n                            status_code: null\r\n                        };\r\n                    return origOpen.apply(this, arguments);\r\n                };\r\n            });\r\n\r\n            fill(xhrproto, 'send', function(origSend) {\r\n                return function (data) { // preserve arity\r\n                    var xhr = this;\r\n                    if ('onreadystatechange' in xhr && isFunction(xhr.onreadystatechange)) {\r\n                        fill(xhr, 'onreadystatechange', function (orig) {\r\n                            xhr.__logger_xhr.status_code = xhr.status;\r\n                            events.triggerHandler('error', xhr.__logger_xhr);\r\n                             return orig.apply(this, arguments);\r\n                        } /* intentionally don't track this instrumentation */);\r\n                    } else {\r\n                        // if onreadystatechange wasn't actually set by the page on this xhr, we\r\n                        // are free to set our own and capture the breadcrumb\r\n                        xhr.onreadystatechange = function(abc) {\r\n                            xhr.__logger_xhr.status_code = xhr.status;\r\n                            events.triggerHandler('error', xhr.__logger_xhr);\r\n                         };\r\n                    }\r\n\r\n                    return origSend.apply(this, arguments);\r\n                };\r\n            });\r\n        }\r\n\r\n        if ('fetch' in this.window) {\r\n            fill(this.window, 'fetch', function(origFetch) {\r\n                return function (fn, t) { // preserve arity\r\n                    // Make a copy of the arguments to prevent deoptimization\r\n                    // https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\r\n                    let args = Array.prototype.slice.call(arguments),\r\n                        fetchData = {\r\n                            method: 'GET',\r\n                            url: args[0],\r\n                            status_code: null\r\n                        };\r\n\r\n                    if (args[1] && args[1].method) {\r\n                        fetchData.method = args[1].method;\r\n                    }\r\n                    return origFetch.apply(this, args).then(function (response) {\r\n                        fetchData.status_code = response.status;\r\n                        events.triggerHandler('error', xhr.__logger_xhr);\r\n                        return response;\r\n                    });\r\n                };\r\n            });\r\n        }\r\n    }\r\n    _handleOnErrorStackInfo(stackInfo, options){\r\n        this.scheduler.error(stackInfo, options);\r\n    }\r\n    _handleAjaxErrors(error) {\r\n        let status = error.status_code,\r\n            type = /4\\d{2}/.test(status) ? '4xx' : /5\\d{2}/.test(status) ? '5xx' : '5xx';\r\n        error.name = type;\r\n        this.scheduler.error(error);\r\n    }\r\n    captureError(ex, options) {\r\n        try {\r\n            let stack = TraceKit.computeStackTrace(ex);\r\n            this._handleOnErrorStackInfo(stack, options);\r\n        } catch(ex1) {\r\n            if(ex !== ex1) {\r\n                throw ex1;\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/logger.js"],"sourceRoot":""}