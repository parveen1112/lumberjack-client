{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 65bec0e28e59efb399d1","webpack:///./vendor/TraceKit/tracekit.js","webpack:///./src/logger.js"],"names":["TraceKit","_oldTraceKit","window","_slice","slice","UNKNOWN_FUNCTION","_has","object","key","Object","prototype","hasOwnProperty","call","_isUndefined","what","noConflict","wrap","traceKitWrapper","func","wrapped","apply","arguments","e","report","reportModuleWrapper","handlers","lastException","lastExceptionStack","subscribe","handler","installGlobalHandler","push","unsubscribe","i","length","splice","notifyHandlers","stack","isWindowError","error","exception","collectWindowErrors","inner","_oldOnerrorHandler","_onErrorHandlerInstalled","traceKitWindowOnError","message","url","lineNo","columnNo","errorObj","computeStackTrace","augmentStackTraceWithInitialElement","processLastException","location","guessFunctionName","line","context","gatherContext","onerror","_lastExceptionStack","_lastException","ex","setTimeout","incomplete","computeStackTraceWrapper","debug","sourceCache","loadSource","remoteFetching","getXHR","XMLHttpRequest","ActiveXObject","request","open","send","responseText","getSource","source","domain","document","match","exec","split","reFunctionArgNames","reGuessFunction","maxLines","m","linesBefore","Math","floor","linesOfContext","linesAfter","start","max","end","min","escapeRegExp","text","replace","escapeCodeAsRegExpForMatchingInsideHTML","body","findSourceInUrls","re","urls","j","join","substring","index","lastIndexOf","findSourceInLine","fragment","RegExp","findSourceByFunctionBody","href","scripts","getElementsByTagName","code","codeRE","eventRE","parts","result","script","src","name","args","event","computeStackTraceFromStackProp","chrome","gecko","winjs","lines","element","reference","isNative","indexOf","column","columnNumber","computeStackTraceFromStacktraceProp","stacktrace","opera10Regex","opera11Regex","exc","computeStackTraceFromOperaMultiLineMessage","lineRE1","lineRE2","lineRE3","inlineScriptBlocks","s","item","relativeLine","pos","innerText","midline","stackInfo","initial","unshift","partial","computeStackTraceByWalkingCallerChain","depth","functionName","funcs","recursion","curr","caller","toString","input","description","sourceURL","fileName","lineNumber","computeStackTraceOfCaller","Error","ofCaller","extendToAsynchronousCallbacks","_helper","fnName","originalFn","traceKitAsyncExtension","originalCallback","module","exports","Logger","self","_handleOnErrorStackInfo","options","_lastCapturedException","ex1","console","log"],"mappings":"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","file":"logger.bundle.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"Logger\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Logger\"] = factory();\n\telse\n\t\troot[\"Logger\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 65bec0e28e59efb399d1","/**\r\n * https://github.com/csnover/TraceKit\r\n * @license MIT\r\n * @namespace TraceKit\r\n */\r\n\r\nvar TraceKit = {};\r\nvar _oldTraceKit = window.TraceKit;\r\n\r\n// global reference to slice\r\nvar _slice = [].slice;\r\nvar UNKNOWN_FUNCTION = '?';\r\n\r\n/**\r\n * A better form of hasOwnProperty<br/>\r\n * Example: `_has(MainHostObject, property) === true/false`\r\n *\r\n * @param {Object} object to check property\r\n * @param {string} key to check\r\n * @return {Boolean} true if the object has the key and it is not inherited\r\n */\r\nfunction _has(object, key) {\r\n    return Object.prototype.hasOwnProperty.call(object, key);\r\n}\r\n\r\n/**\r\n * Returns true if the parameter is undefined<br/>\r\n * Example: `_isUndefined(val) === true/false`\r\n *\r\n * @param {*} what Value to check\r\n * @return {Boolean} true if undefined and false otherwise\r\n */\r\nfunction _isUndefined(what) {\r\n    return typeof what === 'undefined';\r\n}\r\n\r\n/**\r\n * Export TraceKit out to another variable<br/>\r\n * Example: `var TK = TraceKit.noConflict()`\r\n * @return {Object} The TraceKit object\r\n * @memberof TraceKit\r\n */\r\nTraceKit.noConflict = function noConflict() {\r\n    window.TraceKit = _oldTraceKit;\r\n    return TraceKit;\r\n};\r\n\r\n/**\r\n * Wrap any function in a TraceKit reporter<br/>\r\n * Example: `func = TraceKit.wrap(func);`\r\n *\r\n * @param {Function} func Function to be wrapped\r\n * @return {Function} The wrapped func\r\n * @memberof TraceKit\r\n */\r\nTraceKit.wrap = function traceKitWrapper(func) {\r\n    function wrapped() {\r\n        try {\r\n            return func.apply(this, arguments);\r\n        } catch (e) {\r\n            TraceKit.report(e);\r\n            throw e;\r\n        }\r\n    }\r\n    return wrapped;\r\n};\r\n\r\n/**\r\n * Cross-browser processing of unhandled exceptions\r\n *\r\n * Syntax:\r\n * ```js\r\n *   TraceKit.report.subscribe(function(stackInfo) { ... })\r\n *   TraceKit.report.unsubscribe(function(stackInfo) { ... })\r\n *   TraceKit.report(exception)\r\n *   try { ...code... } catch(ex) { TraceKit.report(ex); }\r\n * ```\r\n *\r\n * Supports:\r\n *   - Firefox: full stack trace with line numbers, plus column number\r\n *     on top frame; column number is not guaranteed\r\n *   - Opera: full stack trace with line and column numbers\r\n *   - Chrome: full stack trace with line and column numbers\r\n *   - Safari: line and column number for the top frame only; some frames\r\n *     may be missing, and column number is not guaranteed\r\n *   - IE: line and column number for the top frame only; some frames\r\n *     may be missing, and column number is not guaranteed\r\n *\r\n * In theory, TraceKit should work on all of the following versions:\r\n *   - IE5.5+ (only 8.0 tested)\r\n *   - Firefox 0.9+ (only 3.5+ tested)\r\n *   - Opera 7+ (only 10.50 tested; versions 9 and earlier may require\r\n *     Exceptions Have Stacktrace to be enabled in opera:config)\r\n *   - Safari 3+ (only 4+ tested)\r\n *   - Chrome 1+ (only 5+ tested)\r\n *   - Konqueror 3.5+ (untested)\r\n *\r\n * Requires TraceKit.computeStackTrace.\r\n *\r\n * Tries to catch all unhandled exceptions and report them to the\r\n * subscribed handlers. Please note that TraceKit.report will rethrow the\r\n * exception. This is REQUIRED in order to get a useful stack trace in IE.\r\n * If the exception does not reach the top of the browser, you will only\r\n * get a stack trace from the point where TraceKit.report was called.\r\n *\r\n * Handlers receive a TraceKit.StackTrace object as described in the\r\n * TraceKit.computeStackTrace docs.\r\n *\r\n * @memberof TraceKit\r\n * @namespace\r\n */\r\nTraceKit.report = (function reportModuleWrapper() {\r\n    var handlers = [],\r\n        lastException = null,\r\n        lastExceptionStack = null;\r\n\r\n    /**\r\n     * Add a crash handler.\r\n     * @param {Function} handler\r\n     * @memberof TraceKit.report\r\n     */\r\n    function subscribe(handler) {\r\n        installGlobalHandler();\r\n        handlers.push(handler);\r\n    }\r\n\r\n    /**\r\n     * Remove a crash handler.\r\n     * @param {Function} handler\r\n     * @memberof TraceKit.report\r\n     */\r\n    function unsubscribe(handler) {\r\n        for (var i = handlers.length - 1; i >= 0; --i) {\r\n            if (handlers[i] === handler) {\r\n                handlers.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Dispatch stack information to all handlers.\r\n     * @param {TraceKit.StackTrace} stack\r\n     * @param {boolean} isWindowError Is this a top-level window error?\r\n     * @param {Error=} error The error that's being handled (if available, null otherwise)\r\n     * @memberof TraceKit.report\r\n     * @throws An exception if an error occurs while calling an handler.\r\n     */\r\n    function notifyHandlers(stack, isWindowError, error) {\r\n        var exception = null;\r\n        if (isWindowError && !TraceKit.collectWindowErrors) {\r\n            return;\r\n        }\r\n        for (var i in handlers) {\r\n            if (_has(handlers, i)) {\r\n                try {\r\n                    handlers[i](stack, isWindowError, error);\r\n                } catch (inner) {\r\n                    exception = inner;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (exception) {\r\n            throw exception;\r\n        }\r\n    }\r\n\r\n    var _oldOnerrorHandler, _onErrorHandlerInstalled;\r\n\r\n    /**\r\n     * Ensures all global unhandled exceptions are recorded.\r\n     * Supported by Gecko and IE.\r\n     * @param {string} message Error message.\r\n     * @param {string} url URL of script that generated the exception.\r\n     * @param {(number|string)} lineNo The line number at which the error occurred.\r\n     * @param {(number|string)=} columnNo The column number at which the error occurred.\r\n     * @param {Error=} errorObj The actual Error object.\r\n     * @memberof TraceKit.report\r\n     */\r\n    function traceKitWindowOnError(message, url, lineNo, columnNo, errorObj) {\r\n        var stack = null;\r\n\r\n        if (lastExceptionStack) {\r\n            TraceKit.computeStackTrace.augmentStackTraceWithInitialElement(lastExceptionStack, url, lineNo, message);\r\n            processLastException();\r\n        } else if (errorObj) {\r\n            stack = TraceKit.computeStackTrace(errorObj);\r\n            notifyHandlers(stack, true, errorObj);\r\n        } else {\r\n            var location = {\r\n                'url': url,\r\n                'line': lineNo,\r\n                'column': columnNo\r\n            };\r\n            location.func = TraceKit.computeStackTrace.guessFunctionName(location.url, location.line);\r\n            location.context = TraceKit.computeStackTrace.gatherContext(location.url, location.line);\r\n            stack = {\r\n                'mode': 'onerror',\r\n                'message': message,\r\n                'stack': [location]\r\n            };\r\n\r\n            notifyHandlers(stack, true, null);\r\n        }\r\n\r\n        if (_oldOnerrorHandler) {\r\n            return _oldOnerrorHandler.apply(this, arguments);\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Install a global onerror handler\r\n     * @memberof TraceKit.report\r\n     */\r\n    function installGlobalHandler () {\r\n        if (_onErrorHandlerInstalled === true) {\r\n            return;\r\n        }\r\n        _oldOnerrorHandler = window.onerror;\r\n        window.onerror = traceKitWindowOnError;\r\n        _onErrorHandlerInstalled = true;\r\n    }\r\n\r\n    /**\r\n     * Process the most recent exception\r\n     * @memberof TraceKit.report\r\n     */\r\n    function processLastException() {\r\n        var _lastExceptionStack = lastExceptionStack,\r\n            _lastException = lastException;\r\n        lastExceptionStack = null;\r\n        lastException = null;\r\n        notifyHandlers(_lastExceptionStack, false, _lastException);\r\n    }\r\n\r\n    /**\r\n     * Reports an unhandled Error to TraceKit.\r\n     * @param {Error} ex\r\n     * @memberof TraceKit.report\r\n     * @throws An exception if an incomplete stack trace is detected (old IE browsers).\r\n     */\r\n    function report(ex) {\r\n        if (lastExceptionStack) {\r\n            if (lastException === ex) {\r\n                return; // already caught by an inner catch block, ignore\r\n            } else {\r\n                processLastException();\r\n            }\r\n        }\r\n\r\n        var stack = TraceKit.computeStackTrace(ex);\r\n        lastExceptionStack = stack;\r\n        lastException = ex;\r\n\r\n        // If the stack trace is incomplete, wait for 2 seconds for\r\n        // slow slow IE to see if onerror occurs or not before reporting\r\n        // this exception; otherwise, we will end up with an incomplete\r\n        // stack trace\r\n        window.setTimeout(function () {\r\n            if (lastException === ex) {\r\n                processLastException();\r\n            }\r\n        }, (stack.incomplete ? 2000 : 0));\r\n\r\n        throw ex; // re-throw to propagate to the top level (and cause window.onerror)\r\n    }\r\n\r\n    report.subscribe = subscribe;\r\n    report.unsubscribe = unsubscribe;\r\n    return report;\r\n}());\r\n\r\n/**\r\n * An object representing a single stack frame.\r\n * @typedef {Object} StackFrame\r\n * @property {string} url The JavaScript or HTML file URL.\r\n * @property {string} func The function name, or empty for anonymous functions (if guessing did not work).\r\n * @property {string[]?} args The arguments passed to the function, if known.\r\n * @property {number=} line The line number, if known.\r\n * @property {number=} column The column number, if known.\r\n * @property {string[]} context An array of source code lines; the middle element corresponds to the correct line#.\r\n * @memberof TraceKit\r\n */\r\n\r\n/**\r\n * An object representing a JavaScript stack trace.\r\n * @typedef {Object} StackTrace\r\n * @property {string} name The name of the thrown exception.\r\n * @property {string} message The exception error message.\r\n * @property {TraceKit.StackFrame[]} stack An array of stack frames.\r\n * @property {string} mode 'stack', 'stacktrace', 'multiline', 'callers', 'onerror', or 'failed' -- method used to collect the stack trace.\r\n * @memberof TraceKit\r\n */\r\n\r\n/**\r\n * TraceKit.computeStackTrace: cross-browser stack traces in JavaScript\r\n *\r\n * Syntax:\r\n *   ```js\r\n *   s = TraceKit.computeStackTrace.ofCaller([depth])\r\n *   s = TraceKit.computeStackTrace(exception) // consider using TraceKit.report instead (see below)\r\n *   ```\r\n *\r\n * Supports:\r\n *   - Firefox:  full stack trace with line numbers and unreliable column\r\n *               number on top frame\r\n *   - Opera 10: full stack trace with line and column numbers\r\n *   - Opera 9-: full stack trace with line numbers\r\n *   - Chrome:   full stack trace with line and column numbers\r\n *   - Safari:   line and column number for the topmost stacktrace element\r\n *               only\r\n *   - IE:       no line numbers whatsoever\r\n *\r\n * Tries to guess names of anonymous functions by looking for assignments\r\n * in the source code. In IE and Safari, we have to guess source file names\r\n * by searching for function bodies inside all page scripts. This will not\r\n * work for scripts that are loaded cross-domain.\r\n * Here be dragons: some function names may be guessed incorrectly, and\r\n * duplicate functions may be mismatched.\r\n *\r\n * TraceKit.computeStackTrace should only be used for tracing purposes.\r\n * Logging of unhandled exceptions should be done with TraceKit.report,\r\n * which builds on top of TraceKit.computeStackTrace and provides better\r\n * IE support by utilizing the window.onerror event to retrieve information\r\n * about the top of the stack.\r\n *\r\n * Note: In IE and Safari, no stack trace is recorded on the Error object,\r\n * so computeStackTrace instead walks its *own* chain of callers.\r\n * This means that:\r\n *  * in Safari, some methods may be missing from the stack trace;\r\n *  * in IE, the topmost function in the stack trace will always be the\r\n *    caller of computeStackTrace.\r\n *\r\n * This is okay for tracing (because you are likely to be calling\r\n * computeStackTrace from the function you want to be the topmost element\r\n * of the stack trace anyway), but not okay for logging unhandled\r\n * exceptions (because your catch block will likely be far away from the\r\n * inner function that actually caused the exception).\r\n *\r\n * Tracing example:\r\n *  ```js\r\n *     function trace(message) {\r\n*         var stackInfo = TraceKit.computeStackTrace.ofCaller();\r\n*         var data = message + \"\\n\";\r\n*         for(var i in stackInfo.stack) {\r\n*             var item = stackInfo.stack[i];\r\n*             data += (item.func || '[anonymous]') + \"() in \" + item.url + \":\" + (item.line || '0') + \"\\n\";\r\n*         }\r\n*         if (window.console)\r\n*             console.info(data);\r\n*         else\r\n*             alert(data);\r\n*     }\r\n * ```\r\n * @memberof TraceKit\r\n * @namespace\r\n */\r\nTraceKit.computeStackTrace = (function computeStackTraceWrapper() {\r\n    var debug = false,\r\n        sourceCache = {};\r\n\r\n    /**\r\n     * Attempts to retrieve source code via XMLHttpRequest, which is used\r\n     * to look up anonymous function names.\r\n     * @param {string} url URL of source code.\r\n     * @return {string} Source contents.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function loadSource(url) {\r\n        if (!TraceKit.remoteFetching) { //Only attempt request if remoteFetching is on.\r\n            return '';\r\n        }\r\n        try {\r\n            var getXHR = function() {\r\n                try {\r\n                    return new window.XMLHttpRequest();\r\n                } catch (e) {\r\n                    // explicitly bubble up the exception if not found\r\n                    return new window.ActiveXObject('Microsoft.XMLHTTP');\r\n                }\r\n            };\r\n\r\n            var request = getXHR();\r\n            request.open('GET', url, false);\r\n            request.send('');\r\n            return request.responseText;\r\n        } catch (e) {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieves source code from the source code cache.\r\n     * @param {string} url URL of source code.\r\n     * @return {Array.<string>} Source contents.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function getSource(url) {\r\n        if (typeof url !== 'string') {\r\n            return [];\r\n        }\r\n\r\n        if (!_has(sourceCache, url)) {\r\n            // URL needs to be able to fetched within the acceptable domain.  Otherwise,\r\n            // cross-domain errors will be triggered.\r\n            /*\r\n             Regex matches:\r\n             0 - Full Url\r\n             1 - Protocol\r\n             2 - Domain\r\n             3 - Port (Useful for internal applications)\r\n             4 - Path\r\n             */\r\n            var source = '';\r\n            var domain = '';\r\n            try { domain = window.document.domain; } catch (e) { }\r\n            var match = /(.*)\\:\\/\\/([^:\\/]+)([:\\d]*)\\/{0,1}([\\s\\S]*)/.exec(url);\r\n            if (match && match[2] === domain) {\r\n                source = loadSource(url);\r\n            }\r\n            sourceCache[url] = source ? source.split('\\n') : [];\r\n        }\r\n\r\n        return sourceCache[url];\r\n    }\r\n\r\n    /**\r\n     * Tries to use an externally loaded copy of source code to determine\r\n     * the name of a function by looking at the name of the variable it was\r\n     * assigned to, if any.\r\n     * @param {string} url URL of source code.\r\n     * @param {(string|number)} lineNo Line number in source code.\r\n     * @return {string} The function name, if discoverable.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function guessFunctionName(url, lineNo) {\r\n        var reFunctionArgNames = /function ([^(]*)\\(([^)]*)\\)/,\r\n            reGuessFunction = /['\"]?([0-9A-Za-z$_]+)['\"]?\\s*[:=]\\s*(function|eval|new Function)/,\r\n            line = '',\r\n            maxLines = 10,\r\n            source = getSource(url),\r\n            m;\r\n\r\n        if (!source.length) {\r\n            return UNKNOWN_FUNCTION;\r\n        }\r\n\r\n        // Walk backwards from the first line in the function until we find the line which\r\n        // matches the pattern above, which is the function definition\r\n        for (var i = 0; i < maxLines; ++i) {\r\n            line = source[lineNo - i] + line;\r\n\r\n            if (!_isUndefined(line)) {\r\n                if ((m = reGuessFunction.exec(line))) {\r\n                    return m[1];\r\n                } else if ((m = reFunctionArgNames.exec(line))) {\r\n                    return m[1];\r\n                }\r\n            }\r\n        }\r\n\r\n        return UNKNOWN_FUNCTION;\r\n    }\r\n\r\n    /**\r\n     * Retrieves the surrounding lines from where an exception occurred.\r\n     * @param {string} url URL of source code.\r\n     * @param {(string|number)} line Line number in source code to centre\r\n     * around for context.\r\n     * @return {?Array.<string>} Lines of source code.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function gatherContext(url, line) {\r\n        var source = getSource(url);\r\n\r\n        if (!source.length) {\r\n            return null;\r\n        }\r\n\r\n        var context = [],\r\n        // linesBefore & linesAfter are inclusive with the offending line.\r\n        // if linesOfContext is even, there will be one extra line\r\n        //   *before* the offending line.\r\n            linesBefore = Math.floor(TraceKit.linesOfContext / 2),\r\n        // Add one extra line if linesOfContext is odd\r\n            linesAfter = linesBefore + (TraceKit.linesOfContext % 2),\r\n            start = Math.max(0, line - linesBefore - 1),\r\n            end = Math.min(source.length, line + linesAfter - 1);\r\n\r\n        line -= 1; // convert to 0-based index\r\n\r\n        for (var i = start; i < end; ++i) {\r\n            if (!_isUndefined(source[i])) {\r\n                context.push(source[i]);\r\n            }\r\n        }\r\n\r\n        return context.length > 0 ? context : null;\r\n    }\r\n\r\n    /**\r\n     * Escapes special characters, except for whitespace, in a string to be\r\n     * used inside a regular expression as a string literal.\r\n     * @param {string} text The string.\r\n     * @return {string} The escaped string literal.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function escapeRegExp(text) {\r\n        return text.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#]/g, '\\\\$&');\r\n    }\r\n\r\n    /**\r\n     * Escapes special characters in a string to be used inside a regular\r\n     * expression as a string literal. Also ensures that HTML entities will\r\n     * be matched the same as their literal friends.\r\n     * @param {string} body The string.\r\n     * @return {string} The escaped string.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function escapeCodeAsRegExpForMatchingInsideHTML(body) {\r\n        return escapeRegExp(body).replace('<', '(?:<|&lt;)').replace('>', '(?:>|&gt;)').replace('&', '(?:&|&amp;)').replace('\"', '(?:\"|&quot;)').replace(/\\s+/g, '\\\\s+');\r\n    }\r\n\r\n    /**\r\n     * Determines where a code fragment occurs in the source code.\r\n     * @param {RegExp} re The function definition.\r\n     * @param {Array.<string>} urls A list of URLs to search.\r\n     * @return {?Object.<string, (string|number)>} An object containing\r\n     * the url, line, and column number of the defined function.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function findSourceInUrls(re, urls) {\r\n        var source, m;\r\n        for (var i = 0, j = urls.length; i < j; ++i) {\r\n            // console.log('searching', urls[i]);\r\n            if ((source = getSource(urls[i])).length) {\r\n                source = source.join('\\n');\r\n                if ((m = re.exec(source))) {\r\n                    // console.log('Found function in ' + urls[i]);\r\n\r\n                    return {\r\n                        'url': urls[i],\r\n                        'line': source.substring(0, m.index).split('\\n').length,\r\n                        'column': m.index - source.lastIndexOf('\\n', m.index) - 1\r\n                    };\r\n                }\r\n            }\r\n        }\r\n\r\n        // console.log('no match');\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Determines at which column a code fragment occurs on a line of the\r\n     * source code.\r\n     * @param {string} fragment The code fragment.\r\n     * @param {string} url The URL to search.\r\n     * @param {(string|number)} line The line number to examine.\r\n     * @return {?number} The column number.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function findSourceInLine(fragment, url, line) {\r\n        var source = getSource(url),\r\n            re = new RegExp('\\\\b' + escapeRegExp(fragment) + '\\\\b'),\r\n            m;\r\n\r\n        line -= 1;\r\n\r\n        if (source && source.length > line && (m = re.exec(source[line]))) {\r\n            return m.index;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Determines where a function was defined within the source code.\r\n     * @param {(Function|string)} func A function reference or serialized\r\n     * function definition.\r\n     * @return {?Object.<string, (string|number)>} An object containing\r\n     * the url, line, and column number of the defined function.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function findSourceByFunctionBody(func) {\r\n        if (_isUndefined(window && window.document)) {\r\n            return;\r\n        }\r\n\r\n        var urls = [window.location.href],\r\n            scripts = window.document.getElementsByTagName('script'),\r\n            body,\r\n            code = '' + func,\r\n            codeRE = /^function(?:\\s+([\\w$]+))?\\s*\\(([\\w\\s,]*)\\)\\s*\\{\\s*(\\S[\\s\\S]*\\S)\\s*\\}\\s*$/,\r\n            eventRE = /^function on([\\w$]+)\\s*\\(event\\)\\s*\\{\\s*(\\S[\\s\\S]*\\S)\\s*\\}\\s*$/,\r\n            re,\r\n            parts,\r\n            result;\r\n\r\n        for (var i = 0; i < scripts.length; ++i) {\r\n            var script = scripts[i];\r\n            if (script.src) {\r\n                urls.push(script.src);\r\n            }\r\n        }\r\n\r\n        if (!(parts = codeRE.exec(code))) {\r\n            re = new RegExp(escapeRegExp(code).replace(/\\s+/g, '\\\\s+'));\r\n        }\r\n\r\n        // not sure if this is really necessary, but I don’t have a test\r\n        // corpus large enough to confirm that and it was in the original.\r\n        else {\r\n            var name = parts[1] ? '\\\\s+' + parts[1] : '',\r\n                args = parts[2].split(',').join('\\\\s*,\\\\s*');\r\n\r\n            body = escapeRegExp(parts[3]).replace(/;$/, ';?'); // semicolon is inserted if the function ends with a comment.replace(/\\s+/g, '\\\\s+');\r\n            re = new RegExp('function' + name + '\\\\s*\\\\(\\\\s*' + args + '\\\\s*\\\\)\\\\s*{\\\\s*' + body + '\\\\s*}');\r\n        }\r\n\r\n        // look for a normal function definition\r\n        if ((result = findSourceInUrls(re, urls))) {\r\n            return result;\r\n        }\r\n\r\n        // look for an old-school event handler function\r\n        if ((parts = eventRE.exec(code))) {\r\n            var event = parts[1];\r\n            body = escapeCodeAsRegExpForMatchingInsideHTML(parts[2]);\r\n\r\n            // look for a function defined in HTML as an onXXX handler\r\n            re = new RegExp('on' + event + '=[\\\\\\'\"]\\\\s*' + body + '\\\\s*[\\\\\\'\"]', 'i');\r\n\r\n            if ((result = findSourceInUrls(re, urls[0]))) {\r\n                return result;\r\n            }\r\n\r\n            // look for ???\r\n            re = new RegExp(body);\r\n\r\n            if ((result = findSourceInUrls(re, urls))) {\r\n                return result;\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    // Contents of Exception in various browsers.\r\n    //\r\n    // SAFARI:\r\n    // ex.message = Can't find variable: qq\r\n    // ex.line = 59\r\n    // ex.sourceId = 580238192\r\n    // ex.sourceURL = http://...\r\n    // ex.expressionBeginOffset = 96\r\n    // ex.expressionCaretOffset = 98\r\n    // ex.expressionEndOffset = 98\r\n    // ex.name = ReferenceError\r\n    //\r\n    // FIREFOX:\r\n    // ex.message = qq is not defined\r\n    // ex.fileName = http://...\r\n    // ex.lineNumber = 59\r\n    // ex.columnNumber = 69\r\n    // ex.stack = ...stack trace... (see the example below)\r\n    // ex.name = ReferenceError\r\n    //\r\n    // CHROME:\r\n    // ex.message = qq is not defined\r\n    // ex.name = ReferenceError\r\n    // ex.type = not_defined\r\n    // ex.arguments = ['aa']\r\n    // ex.stack = ...stack trace...\r\n    //\r\n    // INTERNET EXPLORER:\r\n    // ex.message = ...\r\n    // ex.name = ReferenceError\r\n    //\r\n    // OPERA:\r\n    // ex.message = ...message... (see the example below)\r\n    // ex.name = ReferenceError\r\n    // ex.opera#sourceloc = 11  (pretty much useless, duplicates the info in ex.message)\r\n    // ex.stacktrace = n/a; see 'opera:config#UserPrefs|Exceptions Have Stacktrace'\r\n\r\n    /**\r\n     * Computes stack trace information from the stack property.\r\n     * Chrome and Gecko use this property.\r\n     * @param {Error} ex\r\n     * @return {?TraceKit.StackTrace} Stack trace information.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function computeStackTraceFromStackProp(ex) {\r\n        if (!ex.stack) {\r\n            return null;\r\n        }\r\n\r\n        var chrome = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|webpack|eval).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i,\r\n            gecko = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|\\[native).*?)(?::(\\d+))?(?::(\\d+))?\\s*$/i,\r\n            winjs = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i,\r\n            lines = ex.stack.split('\\n'),\r\n            stack = [],\r\n            parts,\r\n            element,\r\n            reference = /^(.*) is undefined$/.exec(ex.message);\r\n\r\n        for (var i = 0, j = lines.length; i < j; ++i) {\r\n            if ((parts = chrome.exec(lines[i]))) {\r\n                var isNative = parts[2] && parts[2].indexOf('native') !== -1;\r\n                element = {\r\n                    'url': !isNative ? parts[2] : null,\r\n                    'func': parts[1] || UNKNOWN_FUNCTION,\r\n                    'args': isNative ? [parts[2]] : [],\r\n                    'line': parts[3] ? +parts[3] : null,\r\n                    'column': parts[4] ? +parts[4] : null\r\n                };\r\n            } else if ( parts = winjs.exec(lines[i]) ) {\r\n                element = {\r\n                    'url': parts[2],\r\n                    'func': parts[1] || UNKNOWN_FUNCTION,\r\n                    'args': [],\r\n                    'line': +parts[3],\r\n                    'column': parts[4] ? +parts[4] : null\r\n                };\r\n            } else if ((parts = gecko.exec(lines[i]))) {\r\n                element = {\r\n                    'url': parts[3],\r\n                    'func': parts[1] || UNKNOWN_FUNCTION,\r\n                    'args': parts[2] ? parts[2].split(',') : [],\r\n                    'line': parts[4] ? +parts[4] : null,\r\n                    'column': parts[5] ? +parts[5] : null\r\n                };\r\n            } else {\r\n                continue;\r\n            }\r\n\r\n            if (!element.func && element.line) {\r\n                element.func = guessFunctionName(element.url, element.line);\r\n            }\r\n\r\n            if (element.line) {\r\n                element.context = gatherContext(element.url, element.line);\r\n            }\r\n\r\n            stack.push(element);\r\n        }\r\n\r\n        if (!stack.length) {\r\n            return null;\r\n        }\r\n\r\n        if (stack[0] && stack[0].line && !stack[0].column && reference) {\r\n            stack[0].column = findSourceInLine(reference[1], stack[0].url, stack[0].line);\r\n        } else if (!stack[0].column && !_isUndefined(ex.columnNumber)) {\r\n            // FireFox uses this awesome columnNumber property for its top frame\r\n            // Also note, Firefox's column number is 0-based and everything else expects 1-based,\r\n            // so adding 1\r\n            stack[0].column = ex.columnNumber + 1;\r\n        }\r\n\r\n        return {\r\n            'mode': 'stack',\r\n            'name': ex.name,\r\n            'message': ex.message,\r\n            'stack': stack\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Computes stack trace information from the stacktrace property.\r\n     * Opera 10+ uses this property.\r\n     * @param {Error} ex\r\n     * @return {?TraceKit.StackTrace} Stack trace information.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function computeStackTraceFromStacktraceProp(ex) {\r\n        // Access and store the stacktrace property before doing ANYTHING\r\n        // else to it because Opera is not very good at providing it\r\n        // reliably in other circumstances.\r\n        var stacktrace = ex.stacktrace;\r\n        if (!stacktrace) {\r\n            return;\r\n        }\r\n\r\n        var opera10Regex = / line (\\d+).*script (?:in )?(\\S+)(?:: in function (\\S+))?$/i,\r\n            opera11Regex = / line (\\d+), column (\\d+)\\s*(?:in (?:<anonymous function: ([^>]+)>|([^\\)]+))\\((.*)\\))? in (.*):\\s*$/i,\r\n            lines = stacktrace.split('\\n'),\r\n            stack = [],\r\n            parts;\r\n\r\n        for (var line = 0; line < lines.length; line += 2) {\r\n            var element = null;\r\n            if ((parts = opera10Regex.exec(lines[line]))) {\r\n                element = {\r\n                    'url': parts[2],\r\n                    'line': +parts[1],\r\n                    'column': null,\r\n                    'func': parts[3],\r\n                    'args':[]\r\n                };\r\n            } else if ((parts = opera11Regex.exec(lines[line]))) {\r\n                element = {\r\n                    'url': parts[6],\r\n                    'line': +parts[1],\r\n                    'column': +parts[2],\r\n                    'func': parts[3] || parts[4],\r\n                    'args': parts[5] ? parts[5].split(',') : []\r\n                };\r\n            }\r\n\r\n            if (element) {\r\n                if (!element.func && element.line) {\r\n                    element.func = guessFunctionName(element.url, element.line);\r\n                }\r\n                if (element.line) {\r\n                    try {\r\n                        element.context = gatherContext(element.url, element.line);\r\n                    } catch (exc) {}\r\n                }\r\n\r\n                if (!element.context) {\r\n                    element.context = [lines[line + 1]];\r\n                }\r\n\r\n                stack.push(element);\r\n            }\r\n        }\r\n\r\n        if (!stack.length) {\r\n            return null;\r\n        }\r\n\r\n        return {\r\n            'mode': 'stacktrace',\r\n            'name': ex.name,\r\n            'message': ex.message,\r\n            'stack': stack\r\n        };\r\n    }\r\n\r\n    /**\r\n     * NOT TESTED.\r\n     * Computes stack trace information from an error message that includes\r\n     * the stack trace.\r\n     * Opera 9 and earlier use this method if the option to show stack\r\n     * traces is turned on in opera:config.\r\n     * @param {Error} ex\r\n     * @return {?TraceKit.StackTrace} Stack information.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function computeStackTraceFromOperaMultiLineMessage(ex) {\r\n        // TODO: Clean this function up\r\n        // Opera includes a stack trace into the exception message. An example is:\r\n        //\r\n        // Statement on line 3: Undefined variable: undefinedFunc\r\n        // Backtrace:\r\n        //   Line 3 of linked script file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.js: In function zzz\r\n        //         undefinedFunc(a);\r\n        //   Line 7 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function yyy\r\n        //           zzz(x, y, z);\r\n        //   Line 3 of inline#1 script in file://localhost/Users/andreyvit/Projects/TraceKit/javascript-client/sample.html: In function xxx\r\n        //           yyy(a, a, a);\r\n        //   Line 1 of function script\r\n        //     try { xxx('hi'); return false; } catch(ex) { TraceKit.report(ex); }\r\n        //   ...\r\n\r\n        var lines = ex.message.split('\\n');\r\n        if (lines.length < 4) {\r\n            return null;\r\n        }\r\n\r\n        var lineRE1 = /^\\s*Line (\\d+) of linked script ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i,\r\n            lineRE2 = /^\\s*Line (\\d+) of inline#(\\d+) script in ((?:file|https?|blob)\\S+)(?:: in function (\\S+))?\\s*$/i,\r\n            lineRE3 = /^\\s*Line (\\d+) of function script\\s*$/i,\r\n            stack = [],\r\n            scripts = (window && window.document && window.document.getElementsByTagName('script')),\r\n            inlineScriptBlocks = [],\r\n            parts;\r\n\r\n        for (var s in scripts) {\r\n            if (_has(scripts, s) && !scripts[s].src) {\r\n                inlineScriptBlocks.push(scripts[s]);\r\n            }\r\n        }\r\n\r\n        for (var line = 2; line < lines.length; line += 2) {\r\n            var item = null;\r\n            if ((parts = lineRE1.exec(lines[line]))) {\r\n                item = {\r\n                    'url': parts[2],\r\n                    'func': parts[3],\r\n                    'args': [],\r\n                    'line': +parts[1],\r\n                    'column': null\r\n                };\r\n            } else if ((parts = lineRE2.exec(lines[line]))) {\r\n                item = {\r\n                    'url': parts[3],\r\n                    'func': parts[4],\r\n                    'args': [],\r\n                    'line': +parts[1],\r\n                    'column': null // TODO: Check to see if inline#1 (+parts[2]) points to the script number or column number.\r\n                };\r\n                var relativeLine = (+parts[1]); // relative to the start of the <SCRIPT> block\r\n                var script = inlineScriptBlocks[parts[2] - 1];\r\n                if (script) {\r\n                    var source = getSource(item.url);\r\n                    if (source) {\r\n                        source = source.join('\\n');\r\n                        var pos = source.indexOf(script.innerText);\r\n                        if (pos >= 0) {\r\n                            item.line = relativeLine + source.substring(0, pos).split('\\n').length;\r\n                        }\r\n                    }\r\n                }\r\n            } else if ((parts = lineRE3.exec(lines[line]))) {\r\n                var url = window.location.href.replace(/#.*$/, '');\r\n                var re = new RegExp(escapeCodeAsRegExpForMatchingInsideHTML(lines[line + 1]));\r\n                var src = findSourceInUrls(re, [url]);\r\n                item = {\r\n                    'url': url,\r\n                    'func': '',\r\n                    'args': [],\r\n                    'line': src ? src.line : parts[1],\r\n                    'column': null\r\n                };\r\n            }\r\n\r\n            if (item) {\r\n                if (!item.func) {\r\n                    item.func = guessFunctionName(item.url, item.line);\r\n                }\r\n                var context = gatherContext(item.url, item.line);\r\n                var midline = (context ? context[Math.floor(context.length / 2)] : null);\r\n                if (context && midline.replace(/^\\s*/, '') === lines[line + 1].replace(/^\\s*/, '')) {\r\n                    item.context = context;\r\n                } else {\r\n                    // if (context) alert(\"Context mismatch. Correct midline:\\n\" + lines[i+1] + \"\\n\\nMidline:\\n\" + midline + \"\\n\\nContext:\\n\" + context.join(\"\\n\") + \"\\n\\nURL:\\n\" + item.url);\r\n                    item.context = [lines[line + 1]];\r\n                }\r\n                stack.push(item);\r\n            }\r\n        }\r\n        if (!stack.length) {\r\n            return null; // could not parse multiline exception message as Opera stack trace\r\n        }\r\n\r\n        return {\r\n            'mode': 'multiline',\r\n            'name': ex.name,\r\n            'message': lines[0],\r\n            'stack': stack\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Adds information about the first frame to incomplete stack traces.\r\n     * Safari and IE require this to get complete data on the first frame.\r\n     * @param {TraceKit.StackTrace} stackInfo Stack trace information from\r\n     * one of the compute* methods.\r\n     * @param {string} url The URL of the script that caused an error.\r\n     * @param {(number|string)} lineNo The line number of the script that\r\n     * caused an error.\r\n     * @param {string=} message The error generated by the browser, which\r\n     * hopefully contains the name of the object that caused the error.\r\n     * @return {boolean} Whether or not the stack information was\r\n     * augmented.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function augmentStackTraceWithInitialElement(stackInfo, url, lineNo, message) {\r\n        var initial = {\r\n            'url': url,\r\n            'line': lineNo\r\n        };\r\n\r\n        if (initial.url && initial.line) {\r\n            stackInfo.incomplete = false;\r\n\r\n            if (!initial.func) {\r\n                initial.func = guessFunctionName(initial.url, initial.line);\r\n            }\r\n\r\n            if (!initial.context) {\r\n                initial.context = gatherContext(initial.url, initial.line);\r\n            }\r\n\r\n            var reference = / '([^']+)' /.exec(message);\r\n            if (reference) {\r\n                initial.column = findSourceInLine(reference[1], initial.url, initial.line);\r\n            }\r\n\r\n            if (stackInfo.stack.length > 0) {\r\n                if (stackInfo.stack[0].url === initial.url) {\r\n                    if (stackInfo.stack[0].line === initial.line) {\r\n                        return false; // already in stack trace\r\n                    } else if (!stackInfo.stack[0].line && stackInfo.stack[0].func === initial.func) {\r\n                        stackInfo.stack[0].line = initial.line;\r\n                        stackInfo.stack[0].context = initial.context;\r\n                        return false;\r\n                    }\r\n                }\r\n            }\r\n\r\n            stackInfo.stack.unshift(initial);\r\n            stackInfo.partial = true;\r\n            return true;\r\n        } else {\r\n            stackInfo.incomplete = true;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Computes stack trace information by walking the arguments.caller\r\n     * chain at the time the exception occurred. This will cause earlier\r\n     * frames to be missed but is the only way to get any stack trace in\r\n     * Safari and IE. The top frame is restored by\r\n     * {@link augmentStackTraceWithInitialElement}.\r\n     * @param {Error} ex\r\n     * @return {TraceKit.StackTrace=} Stack trace information.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function computeStackTraceByWalkingCallerChain(ex, depth) {\r\n        var functionName = /function\\s+([_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*)?\\s*\\(/i,\r\n            stack = [],\r\n            funcs = {},\r\n            recursion = false,\r\n            parts,\r\n            item,\r\n            source;\r\n\r\n        for (var curr = computeStackTraceByWalkingCallerChain.caller; curr && !recursion; curr = curr.caller) {\r\n            if (curr === computeStackTrace || curr === TraceKit.report) {\r\n                // console.log('skipping internal function');\r\n                continue;\r\n            }\r\n\r\n            item = {\r\n                'url': null,\r\n                'func': UNKNOWN_FUNCTION,\r\n                'args': [],\r\n                'line': null,\r\n                'column': null\r\n            };\r\n\r\n            if (curr.name) {\r\n                item.func = curr.name;\r\n            } else if ((parts = functionName.exec(curr.toString()))) {\r\n                item.func = parts[1];\r\n            }\r\n\r\n            if (typeof item.func === 'undefined') {\r\n                try {\r\n                    item.func = parts.input.substring(0, parts.input.indexOf('{'));\r\n                } catch (e) { }\r\n            }\r\n\r\n            if ((source = findSourceByFunctionBody(curr))) {\r\n                item.url = source.url;\r\n                item.line = source.line;\r\n\r\n                if (item.func === UNKNOWN_FUNCTION) {\r\n                    item.func = guessFunctionName(item.url, item.line);\r\n                }\r\n\r\n                var reference = / '([^']+)' /.exec(ex.message || ex.description);\r\n                if (reference) {\r\n                    item.column = findSourceInLine(reference[1], source.url, source.line);\r\n                }\r\n            }\r\n\r\n            if (funcs['' + curr]) {\r\n                recursion = true;\r\n            }else{\r\n                funcs['' + curr] = true;\r\n            }\r\n\r\n            stack.push(item);\r\n        }\r\n\r\n        if (depth) {\r\n            // console.log('depth is ' + depth);\r\n            // console.log('stack is ' + stack.length);\r\n            stack.splice(0, depth);\r\n        }\r\n\r\n        var result = {\r\n            'mode': 'callers',\r\n            'name': ex.name,\r\n            'message': ex.message,\r\n            'stack': stack\r\n        };\r\n        augmentStackTraceWithInitialElement(result, ex.sourceURL || ex.fileName, ex.line || ex.lineNumber, ex.message || ex.description);\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * Computes a stack trace for an exception.\r\n     * @param {Error} ex\r\n     * @param {(string|number)=} depth\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function computeStackTrace(ex, depth) {\r\n        var stack = null;\r\n        depth = (depth == null ? 0 : +depth);\r\n\r\n        try {\r\n            // This must be tried first because Opera 10 *destroys*\r\n            // its stacktrace property if you try to access the stack\r\n            // property first!!\r\n            stack = computeStackTraceFromStacktraceProp(ex);\r\n            if (stack) {\r\n                return stack;\r\n            }\r\n        } catch (e) {\r\n            if (debug) {\r\n                throw e;\r\n            }\r\n        }\r\n\r\n        try {\r\n            stack = computeStackTraceFromStackProp(ex);\r\n            if (stack) {\r\n                return stack;\r\n            }\r\n        } catch (e) {\r\n            if (debug) {\r\n                throw e;\r\n            }\r\n        }\r\n\r\n        try {\r\n            stack = computeStackTraceFromOperaMultiLineMessage(ex);\r\n            if (stack) {\r\n                return stack;\r\n            }\r\n        } catch (e) {\r\n            if (debug) {\r\n                throw e;\r\n            }\r\n        }\r\n\r\n        try {\r\n            stack = computeStackTraceByWalkingCallerChain(ex, depth + 1);\r\n            if (stack) {\r\n                return stack;\r\n            }\r\n        } catch (e) {\r\n            if (debug) {\r\n                throw e;\r\n            }\r\n        }\r\n\r\n        return {\r\n            'mode': 'failed'\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Logs a stacktrace starting from the previous call and working down.\r\n     * @param {(number|string)=} depth How many frames deep to trace.\r\n     * @return {TraceKit.StackTrace} Stack trace information.\r\n     * @memberof TraceKit.computeStackTrace\r\n     */\r\n    function computeStackTraceOfCaller(depth) {\r\n        depth = (depth == null ? 0 : +depth) + 1; // \"+ 1\" because \"ofCaller\" should drop one frame\r\n        try {\r\n            throw new Error();\r\n        } catch (ex) {\r\n            return computeStackTrace(ex, depth + 1);\r\n        }\r\n    }\r\n\r\n    computeStackTrace.augmentStackTraceWithInitialElement = augmentStackTraceWithInitialElement;\r\n    computeStackTrace.guessFunctionName = guessFunctionName;\r\n    computeStackTrace.gatherContext = gatherContext;\r\n    computeStackTrace.ofCaller = computeStackTraceOfCaller;\r\n    computeStackTrace.getSource = getSource;\r\n\r\n    return computeStackTrace;\r\n}());\r\n\r\n/**\r\n * Extends support for global error handling for asynchronous browser\r\n * functions. Adopted from Closure Library's errorhandler.js\r\n * @memberof TraceKit\r\n */\r\nTraceKit.extendToAsynchronousCallbacks = function () {\r\n    var _helper = function _helper(fnName) {\r\n        var originalFn = window[fnName];\r\n        window[fnName] = function traceKitAsyncExtension() {\r\n            // Make a copy of the arguments\r\n            var args = _slice.call(arguments);\r\n            var originalCallback = args[0];\r\n            if (typeof (originalCallback) === 'function') {\r\n                args[0] = TraceKit.wrap(originalCallback);\r\n            }\r\n            // IE < 9 doesn't support .call/.apply on setInterval/setTimeout, but it\r\n            // also only supports 2 argument and doesn't care what \"this\" is, so we\r\n            // can just call the original function directly.\r\n            if (originalFn.apply) {\r\n                return originalFn.apply(this, args);\r\n            } else {\r\n                return originalFn(args[0], args[1]);\r\n            }\r\n        };\r\n    };\r\n\r\n    _helper('setTimeout');\r\n    _helper('setInterval');\r\n};\r\n\r\n//Default options:\r\nif (!TraceKit.remoteFetching) {\r\n    TraceKit.remoteFetching = true;\r\n}\r\nif (!TraceKit.collectWindowErrors) {\r\n    TraceKit.collectWindowErrors = true;\r\n}\r\nif (!TraceKit.linesOfContext || TraceKit.linesOfContext < 1) {\r\n    // 5 lines before, the offending line, 5 lines after\r\n    TraceKit.linesOfContext = 11;\r\n}\r\n\r\nmodule.exports = TraceKit;\n\n\n// WEBPACK FOOTER //\n// ./vendor/TraceKit/tracekit.js","'use strict';\r\n\r\nimport TraceKit from '../vendor/TraceKit/tracekit';\r\n\r\nexport default class Logger{\r\n    constructor(){\r\n\r\n    }\r\n\r\n    install(){\r\n        var self = this;\r\n        TraceKit.report.subscribe(function() {\r\n            self._handleOnErrorStackInfo.apply(self, arguments)\r\n        });\r\n    }\r\n\r\n    captureError(ex, options) {\r\n        // If not an Error is passed through, recall as a message instead\r\n/*\r\n        if (!isError(ex)) {\r\n            return this.captureMessage(ex, objectMerge({\r\n                trimHeadFrames: 1,\r\n                stacktrace: true // if we fall back to captureMessage, default to attempting a new trace\r\n            }, options));\r\n        }\r\n*/\r\n\r\n        // Store the raw exception object for potential debugging and introspection\r\n        this._lastCapturedException = ex;\r\n\r\n        // TraceKit.report will re-raise any exception passed to it,\r\n        // which means you have to wrap it in try/catch. Instead, we\r\n        // can wrap it here and only re-raise if TraceKit.report\r\n        // raises an exception different from the one we asked to\r\n        // report on.\r\n        try {\r\n            var stack = TraceKit.computeStackTrace(ex);\r\n            this._handleOnErrorStackInfo(stack, options);\r\n        } catch(ex1) {\r\n            if(ex !== ex1) {\r\n                throw ex1;\r\n            }\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    getInstance(){\r\n\r\n    }\r\n\r\n    _handleOnErrorStackInfo(stack, options){\r\n        console.log(stack, options)\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/logger.js"],"sourceRoot":""}